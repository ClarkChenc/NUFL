ImageRuntimeVersion: v2.0.50727
Assembly nunit.framework, Version=3.0.5456.383, Culture=neutral, PublicKeyToken=2638cd05610744eb: 
	hash=SHA1, flags=PublicKey
Assembly mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089: 
	hash=None, flags=None
Assembly System, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089: 
	hash=None, flags=None
Assembly System.Web, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a: 
	hash=None, flags=None
Assembly System.Xml, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089: 
	hash=None, flags=None
Class NUnit.Framework.Internal.AssemblyHelper: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    GetAssemblyPath(Type): PrivateScope, Public, Static, HideBySig
    GetAssemblyPath(Assembly): PrivateScope, Public, Static, HideBySig
    GetDirectoryName(Assembly): PrivateScope, Public, Static, HideBySig
    GetAssemblyName(Assembly): PrivateScope, Public, Static, HideBySig
    GetAssemblyPathFromCodeBase(String): PrivateScope, Public, Static, HideBySig
Interface NUnit.Framework.Internal.ILogger: AutoLayout, AnsiClass, Class, Public, ClassSemanticsMask, Abstract
  Methods:
    Error(String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Error(String, Object[]): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Warning(String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Warning(String, Object[]): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Info(String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Info(String, Object[]): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Debug(String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Debug(String, Object[]): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Class NUnit.Framework.Internal.InternalTrace: AutoLayout, AnsiClass, Class, Public, Abstract, Sealed, BeforeFieldInit
  Properties:
    Boolean Initialized 'get set' : 
  Methods:
    get_Initialized(): PrivateScope, Public, Static, HideBySig, SpecialName
    Initialize(String, InternalTraceLevel): PrivateScope, Public, Static, HideBySig
    Initialize(TextWriter, InternalTraceLevel): PrivateScope, Public, Static, HideBySig
    GetLogger(String): PrivateScope, Public, Static, HideBySig
    GetLogger(Type): PrivateScope, Public, Static, HideBySig
Struct NUnit.Framework.Internal.InternalTraceLevel: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    NUnit.Framework.Internal.InternalTraceLevel Default = 0 : Public, Static, Literal, HasDefault
    NUnit.Framework.Internal.InternalTraceLevel Off = 1 : Public, Static, Literal, HasDefault
    NUnit.Framework.Internal.InternalTraceLevel Error = 2 : Public, Static, Literal, HasDefault
    NUnit.Framework.Internal.InternalTraceLevel Warning = 3 : Public, Static, Literal, HasDefault
    NUnit.Framework.Internal.InternalTraceLevel Info = 4 : Public, Static, Literal, HasDefault
    NUnit.Framework.Internal.InternalTraceLevel Debug = 5 : Public, Static, Literal, HasDefault
    NUnit.Framework.Internal.InternalTraceLevel Verbose = 5 : Public, Static, Literal, HasDefault
Class NUnit.Framework.Internal.InternalTraceWriter: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :System.IO.TextWriter
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.IO.TextWriter): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.Text.Encoding Encoding 'get ' : 
  Methods:
    get_Encoding(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    Write(Char): PrivateScope, Public, Virtual, HideBySig
    Write(String): PrivateScope, Public, Virtual, HideBySig
    WriteLine(String): PrivateScope, Public, Virtual, HideBySig
    Flush(): PrivateScope, Public, Virtual, HideBySig
Class NUnit.Framework.Internal.Logger: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(System.String, NUnit.Framework.Internal.InternalTraceLevel, System.IO.TextWriter): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    NUnit.Framework.Internal.ILogger
  Methods:
    Error(String): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Error(String, Object[]): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Warning(String): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Warning(String, Object[]): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Info(String): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Info(String, Object[]): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Debug(String): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Debug(String, Object[]): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Struct NUnit.Framework.ActionTargets: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    NUnit.Framework.ActionTargets Default = 0 : Public, Static, Literal, HasDefault
    NUnit.Framework.ActionTargets Test = 1 : Public, Static, Literal, HasDefault
    NUnit.Framework.ActionTargets Suite = 2 : Public, Static, Literal, HasDefault
Class NUnit.Framework.Api.DriverSettings: AutoLayout, AnsiClass, Class, Public, Abstract, Sealed, BeforeFieldInit
  Fields:
    System.String DefaultTimeout = DefaultTimeout : Public, Static, Literal, HasDefault
    System.String InternalTraceLevel = InternalTraceLevel : Public, Static, Literal, HasDefault
    System.String InternalTraceWriter = InternalTraceWriter : Public, Static, Literal, HasDefault
    System.String LOAD = LOAD : Public, Static, Literal, HasDefault
    System.String NumberOfTestWorkers = NumberOfTestWorkers : Public, Static, Literal, HasDefault
    System.String RandomSeed = RandomSeed : Public, Static, Literal, HasDefault
    System.String StopOnError = StopOnError : Public, Static, Literal, HasDefault
    System.String WorkDirectory = WorkDirectory : Public, Static, Literal, HasDefault
Class NUnit.Framework.Api.FrameworkController: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :System.MarshalByRefObject
    Void .ctor(System.String, System.Collections.IDictionary): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, System.Collections.IDictionary, System.String, System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    NUnit.Framework.Api.ITestAssemblyBuilder Builder 'get set' : 
    NUnit.Framework.Api.ITestAssemblyRunner Runner 'get set' : 
    System.String AssemblyPath 'get set' : 
    System.Collections.IDictionary Settings 'get set' : 
  Methods:
    get_Builder(): PrivateScope, Public, HideBySig, SpecialName
    get_Runner(): PrivateScope, Public, HideBySig, SpecialName
    get_AssemblyPath(): PrivateScope, Public, HideBySig, SpecialName
    get_Settings(): PrivateScope, Public, HideBySig, SpecialName
    InitializeLifetimeService(): PrivateScope, Public, Virtual, HideBySig
Class NUnit.Framework.Api.FrameworkController+FrameworkControllerAction: AutoLayout, AnsiClass, Class, NestedPublic, Abstract, BeforeFieldInit
  :System.MarshalByRefObject
  Methods:
    InitializeLifetimeService(): PrivateScope, Public, Virtual, HideBySig
Class NUnit.Framework.Api.FrameworkController+LoadTestsAction: AutoLayout, AnsiClass, Class, NestedPublic, BeforeFieldInit
  :NUnit.Framework.Api.FrameworkController+FrameworkControllerAction
    Void .ctor(NUnit.Framework.Api.FrameworkController, System.Object): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class NUnit.Framework.Api.FrameworkController+ExploreTestsAction: AutoLayout, AnsiClass, Class, NestedPublic, BeforeFieldInit
  :NUnit.Framework.Api.FrameworkController+FrameworkControllerAction
    Void .ctor(NUnit.Framework.Api.FrameworkController, System.String, System.Object): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class NUnit.Framework.Api.FrameworkController+CountTestsAction: AutoLayout, AnsiClass, Class, NestedPublic, BeforeFieldInit
  :NUnit.Framework.Api.FrameworkController+FrameworkControllerAction
    Void .ctor(NUnit.Framework.Api.FrameworkController, System.String, System.Object): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class NUnit.Framework.Api.FrameworkController+RunTestsAction: AutoLayout, AnsiClass, Class, NestedPublic, BeforeFieldInit
  :NUnit.Framework.Api.FrameworkController+FrameworkControllerAction
    Void .ctor(NUnit.Framework.Api.FrameworkController, System.String, System.Object): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class NUnit.Framework.Api.FrameworkController+RunAsyncAction: AutoLayout, AnsiClass, Class, NestedPublic, BeforeFieldInit
  :NUnit.Framework.Api.FrameworkController+FrameworkControllerAction
    Void .ctor(NUnit.Framework.Api.FrameworkController, System.String, System.Object): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class NUnit.Framework.Api.FrameworkController+StopRunAction: AutoLayout, AnsiClass, Class, NestedPublic, BeforeFieldInit
  :NUnit.Framework.Api.FrameworkController+FrameworkControllerAction
    Void .ctor(NUnit.Framework.Api.FrameworkController, Boolean, System.Object): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Interface NUnit.Framework.Api.ITestAssemblyRunner: AutoLayout, AnsiClass, Class, Public, ClassSemanticsMask, Abstract
  Properties:
    NUnit.Framework.Interfaces.ITest LoadedTest 'get ' : 
    NUnit.Framework.Interfaces.ITestResult Result 'get ' : 
    Boolean IsTestLoaded 'get ' : 
    Boolean IsTestRunning 'get ' : 
    Boolean IsTestComplete 'get ' : 
  Methods:
    get_LoadedTest(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_Result(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_IsTestLoaded(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_IsTestRunning(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_IsTestComplete(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    Load(String, IDictionary): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Load(Assembly, IDictionary): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    CountTestCases(ITestFilter): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Run(ITestListener, ITestFilter): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    RunAsync(ITestListener, ITestFilter): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    WaitForCompletion(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    StopRun(Boolean): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Class NUnit.Framework.Api.NUnitTestAssemblyRunner: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(NUnit.Framework.Api.ITestAssemblyBuilder): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    NUnit.Framework.Api.ITestAssemblyRunner
  Properties:
    NUnit.Framework.Interfaces.ITest LoadedTest 'get set' : 
    NUnit.Framework.Interfaces.ITestResult Result 'get ' : 
    Boolean IsTestLoaded 'get ' : 
    Boolean IsTestRunning 'get ' : 
    Boolean IsTestComplete 'get ' : 
  Methods:
    get_LoadedTest(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Result(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_IsTestLoaded(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_IsTestRunning(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_IsTestComplete(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    Load(String, IDictionary): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Load(Assembly, IDictionary): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    CountTestCases(ITestFilter): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Run(ITestListener, ITestFilter): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    RunAsync(ITestListener, ITestFilter): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    WaitForCompletion(Int32): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    StartRun(ITestListener): PrivateScope, Public, HideBySig
    StopRun(Boolean): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class NUnit.Framework.NUnitAttribute: AutoLayout, AnsiClass, Class, Public, Abstract, BeforeFieldInit
  :System.Attribute
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Interface NUnit.Framework.Internal.IApplyToTest: AutoLayout, AnsiClass, Class, Public, ClassSemanticsMask, Abstract
  Methods:
    ApplyToTest(Test): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Class NUnit.Framework.PropertyAttribute: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :NUnit.Framework.NUnitAttribute
    Void .ctor(System.String, System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, Double): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    NUnit.Framework.Internal.IApplyToTest
  Properties:
    NUnit.Framework.Interfaces.IPropertyBag Properties 'get ' : 
  Methods:
    get_Properties(): PrivateScope, Public, HideBySig, SpecialName
    ApplyToTest(Test): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class NUnit.Framework.ApartmentAttribute: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :NUnit.Framework.PropertyAttribute
    Void .ctor(System.Threading.ApartmentState): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class NUnit.Framework.AuthorAttribute: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :NUnit.Framework.PropertyAttribute
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class NUnit.Framework.TestCaseBuilderAttribute: AutoLayout, AnsiClass, Class, Public, Abstract, BeforeFieldInit
  :NUnit.Framework.NUnitAttribute
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Interface NUnit.Framework.Interfaces.ITestBuilder: AutoLayout, AnsiClass, Class, Public, ClassSemanticsMask, Abstract
  Methods:
    BuildFrom(MethodInfo, Test): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Class NUnit.Framework.CombiningStrategyAttribute: AutoLayout, AnsiClass, Class, Public, Abstract, BeforeFieldInit
  :NUnit.Framework.TestCaseBuilderAttribute
  Interfaces:
    NUnit.Framework.Interfaces.ITestBuilder
    NUnit.Framework.Internal.IApplyToTest
  Methods:
    BuildFrom(MethodInfo, Test): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    ApplyToTest(Test): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class NUnit.Framework.OneTimeTearDownAttribute: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :NUnit.Framework.NUnitAttribute
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class NUnit.Framework.OneTimeSetUpAttribute: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :NUnit.Framework.NUnitAttribute
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class NUnit.Framework.FixtureBuilderAttribute: AutoLayout, AnsiClass, Class, Public, Abstract, BeforeFieldInit
  :System.Attribute
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class NUnit.Framework.LevelOfParallelizationAttribute: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :NUnit.Framework.PropertyAttribute
    Void .ctor(Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Interface NUnit.Framework.Internal.IApplyToContext: AutoLayout, AnsiClass, Class, Public, ClassSemanticsMask, Abstract
  Methods:
    ApplyToContext(TestExecutionContext): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Class NUnit.Framework.ParallelizableAttribute: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :NUnit.Framework.PropertyAttribute
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(NUnit.Framework.ParallelScope): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    NUnit.Framework.Internal.IApplyToContext
  Methods:
    ApplyToContext(TestExecutionContext): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Struct NUnit.Framework.ParallelScope: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    NUnit.Framework.ParallelScope None = 0 : Public, Static, Literal, HasDefault
    NUnit.Framework.ParallelScope Self = 1 : Public, Static, Literal, HasDefault
    NUnit.Framework.ParallelScope Children = 2 : Public, Static, Literal, HasDefault
    NUnit.Framework.ParallelScope Fixtures = 4 : Public, Static, Literal, HasDefault
Interface NUnit.Framework.ITestAction: AutoLayout, AnsiClass, Class, Public, ClassSemanticsMask, Abstract
  Properties:
    NUnit.Framework.ActionTargets Targets 'get ' : 
  Methods:
    BeforeTest(ITest): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    AfterTest(ITest): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    get_Targets(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
Class NUnit.Framework.TestActionAttribute: AutoLayout, AnsiClass, Class, Public, Abstract, BeforeFieldInit
  :System.Attribute
  Interfaces:
    NUnit.Framework.ITestAction
  Properties:
    NUnit.Framework.ActionTargets Targets 'get ' : 
  Methods:
    BeforeTest(ITest): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    AfterTest(ITest): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    get_Targets(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
Class NUnit.Framework.TestOfAttribute: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :NUnit.Framework.PropertyAttribute
    Void .ctor(System.Type): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class NUnit.Framework.Compatibility.AttributeHelper: AutoLayout, AnsiClass, Class, Public, Abstract, Sealed, BeforeFieldInit
  Methods:
    GetCustomAttributes(Object, Type, Boolean): PrivateScope, Public, Static, HideBySig
Class NUnit.Framework.Compatibility.Stopwatch: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :System.Diagnostics.Stopwatch
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class NUnit.Framework.Constraints.ConstraintResult: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(NUnit.Framework.Constraints.IConstraint, System.Object): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(NUnit.Framework.Constraints.IConstraint, System.Object, NUnit.Framework.Constraints.ConstraintStatus): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(NUnit.Framework.Constraints.IConstraint, System.Object, Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.Object ActualValue 'get set' : 
    NUnit.Framework.Constraints.ConstraintStatus Status 'get set' : 
    Boolean IsSuccess 'get ' : 
    System.String Name 'get set' : 
    System.String Description 'get set' : 
  Methods:
    get_ActualValue(): PrivateScope, Public, HideBySig, SpecialName
    get_Status(): PrivateScope, Public, HideBySig, SpecialName
    set_Status(ConstraintStatus): PrivateScope, Public, HideBySig, SpecialName
    get_IsSuccess(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Name(): PrivateScope, Public, HideBySig, SpecialName
    get_Description(): PrivateScope, Public, HideBySig, SpecialName
    WriteMessageTo(MessageWriter): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    WriteActualValueTo(MessageWriter): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class NUnit.Framework.Constraints.EqualConstraintResult: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :NUnit.Framework.Constraints.ConstraintResult
    Void .ctor(NUnit.Framework.Constraints.EqualConstraint, System.Object, Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    WriteMessageTo(MessageWriter): PrivateScope, Public, Virtual, HideBySig
Interface NUnit.Framework.Constraints.IResolveConstraint: AutoLayout, AnsiClass, Class, Public, ClassSemanticsMask, Abstract
  Methods:
    Resolve(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Interface NUnit.Framework.Constraints.IConstraint: AutoLayout, AnsiClass, Class, Public, ClassSemanticsMask, Abstract
  Interfaces:
    NUnit.Framework.Constraints.IResolveConstraint
  Properties:
    System.String DisplayName 'get ' : 
    System.String Description 'get ' : 
    System.Object[] Arguments 'get ' : 
    NUnit.Framework.Constraints.ConstraintBuilder Builder 'get set' : 
  Methods:
    get_DisplayName(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_Description(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_Arguments(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_Builder(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    set_Builder(ConstraintBuilder): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    ApplyTo(TActual): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    ApplyTo(ActualValueDelegate`1): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    ApplyTo(TActual&): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Class NUnit.Framework.Constraints.Constraint: AutoLayout, AnsiClass, Class, Public, Abstract, BeforeFieldInit
  Interfaces:
    NUnit.Framework.Constraints.IConstraint
    NUnit.Framework.Constraints.IResolveConstraint
  Properties:
    System.String DisplayName 'get set' : 
    System.String Description 'get set' : 
    System.Object[] Arguments 'get set' : 
    NUnit.Framework.Constraints.ConstraintBuilder Builder 'get set' : 
    NUnit.Framework.Constraints.ConstraintExpression And 'get ' : 
    NUnit.Framework.Constraints.ConstraintExpression With 'get ' : 
    NUnit.Framework.Constraints.ConstraintExpression Or 'get ' : 
  Methods:
    get_DisplayName(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Description(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Arguments(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Builder(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Builder(ConstraintBuilder): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    ApplyTo(TActual): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    ApplyTo(ActualValueDelegate`1): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    ApplyTo(TActual&): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    ToString(): PrivateScope, Public, Virtual, HideBySig
    op_BitwiseAnd(Constraint, Constraint): PrivateScope, Public, Static, HideBySig, SpecialName
    op_BitwiseOr(Constraint, Constraint): PrivateScope, Public, Static, HideBySig, SpecialName
    op_LogicalNot(Constraint): PrivateScope, Public, Static, HideBySig, SpecialName
    get_And(): PrivateScope, Public, HideBySig, SpecialName
    get_With(): PrivateScope, Public, HideBySig, SpecialName
    get_Or(): PrivateScope, Public, HideBySig, SpecialName
    After(Int32): PrivateScope, Public, HideBySig
    After(Int32, Int32): PrivateScope, Public, HideBySig
Class NUnit.Framework.Constraints.FileOrDirectoryExistsConstraint: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :NUnit.Framework.Constraints.Constraint
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    NUnit.Framework.Constraints.FileOrDirectoryExistsConstraint IgnoreDirectories 'get ' : 
    NUnit.Framework.Constraints.FileOrDirectoryExistsConstraint IgnoreFiles 'get ' : 
    System.String Description 'get ' : 
  Methods:
    get_IgnoreDirectories(): PrivateScope, Public, HideBySig, SpecialName
    get_IgnoreFiles(): PrivateScope, Public, HideBySig, SpecialName
    get_Description(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    ApplyTo(TActual): PrivateScope, Public, Virtual, HideBySig
Class NUnit.Framework.Constraints.FileExistsConstraint: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit (Obsolete)
  :NUnit.Framework.Constraints.FileOrDirectoryExistsConstraint
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.String Description 'get ' : 
  Methods:
    get_Description(): PrivateScope, Public, Virtual, HideBySig, SpecialName
Class NUnit.Framework.Constraints.ConstraintOperator: AutoLayout, AnsiClass, Class, Public, Abstract, BeforeFieldInit
  Properties:
    System.Object LeftContext 'get set' : 
    System.Object RightContext 'get set' : 
    Int32 LeftPrecedence 'get ' : 
    Int32 RightPrecedence 'get ' : 
  Methods:
    get_LeftContext(): PrivateScope, Public, HideBySig, SpecialName
    set_LeftContext(Object): PrivateScope, Public, HideBySig, SpecialName
    get_RightContext(): PrivateScope, Public, HideBySig, SpecialName
    set_RightContext(Object): PrivateScope, Public, HideBySig, SpecialName
    get_LeftPrecedence(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_RightPrecedence(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    Reduce(ConstraintStack): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Class NUnit.Framework.Constraints.PrefixOperator: AutoLayout, AnsiClass, Class, Public, Abstract, BeforeFieldInit
  :NUnit.Framework.Constraints.ConstraintOperator
  Methods:
    Reduce(ConstraintStack): PrivateScope, Public, Virtual, HideBySig
    ApplyPrefix(IConstraint): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Class NUnit.Framework.Constraints.CollectionOperator: AutoLayout, AnsiClass, Class, Public, Abstract, BeforeFieldInit
  :NUnit.Framework.Constraints.PrefixOperator
Class NUnit.Framework.Constraints.AllOperator: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :NUnit.Framework.Constraints.CollectionOperator
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    ApplyPrefix(IConstraint): PrivateScope, Public, Virtual, HideBySig
Class NUnit.Framework.Constraints.NoneOperator: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :NUnit.Framework.Constraints.CollectionOperator
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    ApplyPrefix(IConstraint): PrivateScope, Public, Virtual, HideBySig
Class NUnit.Framework.Constraints.SomeOperator: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :NUnit.Framework.Constraints.CollectionOperator
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    ApplyPrefix(IConstraint): PrivateScope, Public, Virtual, HideBySig
Class NUnit.Framework.Constraints.StringConstraint: AutoLayout, AnsiClass, Class, Public, Abstract, BeforeFieldInit
  :NUnit.Framework.Constraints.Constraint
  Properties:
    System.String Description 'get ' : 
    NUnit.Framework.Constraints.StringConstraint IgnoreCase 'get ' : 
  Methods:
    get_Description(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_IgnoreCase(): PrivateScope, Public, HideBySig, SpecialName
    ApplyTo(TActual): PrivateScope, Public, Virtual, HideBySig
Class NUnit.Framework.Constraints.PathConstraint: AutoLayout, AnsiClass, Class, Public, Abstract, BeforeFieldInit
  :NUnit.Framework.Constraints.StringConstraint
  Properties:
    NUnit.Framework.Constraints.PathConstraint RespectCase 'get ' : 
  Methods:
    get_RespectCase(): PrivateScope, Public, HideBySig, SpecialName
Class NUnit.Framework.Constraints.SubPathConstraint: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :NUnit.Framework.Constraints.PathConstraint
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.String Description 'get ' : 
  Methods:
    get_Description(): PrivateScope, Public, Virtual, HideBySig, SpecialName
Class NUnit.Framework.Constraints.ThrowsExceptionConstraint: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :NUnit.Framework.Constraints.Constraint
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.String Description 'get ' : 
  Methods:
    get_Description(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    ApplyTo(TActual): PrivateScope, Public, Virtual, HideBySig
Class NUnit.Framework.DirectoryAssert: AutoLayout, AnsiClass, Class, Public, Abstract, Sealed, BeforeFieldInit
  Methods:
    Equals(Object, Object): PrivateScope, Public, Static, HideBySig
    ReferenceEquals(Object, Object): PrivateScope, Public, Static, HideBySig
    AreEqual(DirectoryInfo, DirectoryInfo, String, Object[]): PrivateScope, Public, Static, HideBySig
    AreEqual(DirectoryInfo, DirectoryInfo, String): PrivateScope, Public, Static, HideBySig
    AreEqual(DirectoryInfo, DirectoryInfo): PrivateScope, Public, Static, HideBySig
    AreNotEqual(DirectoryInfo, DirectoryInfo, String, Object[]): PrivateScope, Public, Static, HideBySig
    AreNotEqual(DirectoryInfo, DirectoryInfo, String): PrivateScope, Public, Static, HideBySig
    AreNotEqual(DirectoryInfo, DirectoryInfo): PrivateScope, Public, Static, HideBySig
    Exists(DirectoryInfo, String, Object[]): PrivateScope, Public, Static, HideBySig
    Exists(DirectoryInfo, String): PrivateScope, Public, Static, HideBySig
    Exists(DirectoryInfo): PrivateScope, Public, Static, HideBySig
    Exists(String, String, Object[]): PrivateScope, Public, Static, HideBySig
    Exists(String, String): PrivateScope, Public, Static, HideBySig
    Exists(String): PrivateScope, Public, Static, HideBySig
    DoesNotExist(DirectoryInfo, String, Object[]): PrivateScope, Public, Static, HideBySig
    DoesNotExist(DirectoryInfo, String): PrivateScope, Public, Static, HideBySig
    DoesNotExist(DirectoryInfo): PrivateScope, Public, Static, HideBySig
    DoesNotExist(String, String, Object[]): PrivateScope, Public, Static, HideBySig
    DoesNotExist(String, String): PrivateScope, Public, Static, HideBySig
    DoesNotExist(String): PrivateScope, Public, Static, HideBySig
Class NUnit.Framework.Does: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    NUnit.Framework.Constraints.ConstraintExpression Not 'get ' : 
    NUnit.Framework.Constraints.FileOrDirectoryExistsConstraint Exist 'get ' : 
  Methods:
    get_Not(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Exist(): PrivateScope, Public, Static, HideBySig, SpecialName
    Contain(Object): PrivateScope, Public, HideBySig
    Contain(String): PrivateScope, Public, Static, HideBySig
    StartWith(String): PrivateScope, Public, Static, HideBySig
    EndWith(String): PrivateScope, Public, Static, HideBySig
    Match(String): PrivateScope, Public, Static, HideBySig
Class NUnit.Framework.ResultStateException: AutoLayout, AnsiClass, Class, Public, Abstract, Serializable, BeforeFieldInit
  :System.Exception
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, System.Exception): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    NUnit.Framework.Interfaces.ResultState ResultState 'get ' : 
  Methods:
    get_ResultState(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
Interface NUnit.Framework.Interfaces.ICombiningStrategy: AutoLayout, AnsiClass, Class, Public, ClassSemanticsMask, Abstract
  Methods:
    GetTestCases(IEnumerable[]): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Interface NUnit.Framework.Interfaces.ISimpleTestBuilder: AutoLayout, AnsiClass, Class, Public, ClassSemanticsMask, Abstract
  Methods:
    BuildFrom(MethodInfo, Test): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Interface NUnit.Framework.Interfaces.IParameterDataProvider: AutoLayout, AnsiClass, Class, Public, ClassSemanticsMask, Abstract
  Methods:
    HasDataFor(ParameterInfo): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    GetDataFor(ParameterInfo): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Interface NUnit.Framework.Interfaces.IParameterDataSource: AutoLayout, AnsiClass, Class, Public, ClassSemanticsMask, Abstract
  Methods:
    GetData(ParameterInfo): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Interface NUnit.Framework.Interfaces.IXmlNodeBuilder: AutoLayout, AnsiClass, Class, Public, ClassSemanticsMask, Abstract
  Methods:
    ToXml(Boolean): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    AddToXml(XmlNode, Boolean): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Interface NUnit.Framework.Interfaces.IPropertyBag: AutoLayout, AnsiClass, Class, Public, ClassSemanticsMask, Abstract
  Interfaces:
    NUnit.Framework.Interfaces.IXmlNodeBuilder
  Properties:
    System.Collections.IList Item [System.String] 'get set' : 
    System.Collections.Generic.ICollection`1[System.String] Keys 'get ' : 
  Methods:
    Add(String, Object): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Set(String, Object): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Get(String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    ContainsKey(String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    get_Item(String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    set_Item(String, IList): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_Keys(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
Interface NUnit.Framework.Interfaces.ITest: AutoLayout, AnsiClass, Class, Public, ClassSemanticsMask, Abstract
  Interfaces:
    NUnit.Framework.Interfaces.IXmlNodeBuilder
  Properties:
    Int32 Id   'get ' : 
    System.String Name 'get ' : 
    System.String FullName 'get ' : 
    System.Type FixtureType 'get ' : 
    System.Reflection.MethodInfo Method 'get ' : 
    NUnit.Framework.Interfaces.RunState RunState 'get ' : 
    Int32 TestCaseCount 'get ' : 
    NUnit.Framework.Interfaces.IPropertyBag Properties 'get ' : 
    NUnit.Framework.Interfaces.ITest Parent 'get ' : 
    Boolean IsSuite 'get ' : 
    Boolean HasChildren 'get ' : 
    System.Collections.Generic.IList`1[NUnit.Framework.Interfaces.ITest] Tests 'get ' : 
  Methods:
    get_Id(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_Name(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_FullName(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_FixtureType(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_Method(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_RunState(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_TestCaseCount(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_Properties(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_Parent(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_IsSuite(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_HasChildren(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_Tests(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
Interface NUnit.Framework.Api.ITestAssemblyBuilder: AutoLayout, AnsiClass, Class, Public, ClassSemanticsMask, Abstract
  Methods:
    Build(Assembly, IDictionary): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Build(String, IDictionary): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Interface NUnit.Framework.Interfaces.ITestCaseData: AutoLayout, AnsiClass, Class, Public, ClassSemanticsMask, Abstract
  Properties:
    System.String TestName 'get ' : 
    NUnit.Framework.Interfaces.RunState RunState 'get ' : 
    System.Object[] Arguments 'get ' : 
    System.Object ExpectedResult 'get ' : 
    Boolean HasExpectedResult 'get ' : 
    NUnit.Framework.Interfaces.IPropertyBag Properties 'get ' : 
  Methods:
    get_TestName(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_RunState(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_Arguments(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_ExpectedResult(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_HasExpectedResult(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_Properties(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
Interface NUnit.Framework.Interfaces.ITestFilter: AutoLayout, AnsiClass, Class, Public, ClassSemanticsMask, Abstract
  Methods:
    Pass(ITest): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Interface NUnit.Framework.Interfaces.ITestListener: AutoLayout, AnsiClass, Class, Public, ClassSemanticsMask, Abstract
  Methods:
    TestStarted(ITest): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    TestFinished(ITestResult): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Interface NUnit.Framework.Interfaces.ITestResult: AutoLayout, AnsiClass, Class, Public, ClassSemanticsMask, Abstract
  Interfaces:
    NUnit.Framework.Interfaces.IXmlNodeBuilder
  Properties:
    NUnit.Framework.Interfaces.ResultState ResultState 'get ' : 
    System.String Name 'get ' : 
    System.String FullName 'get ' : 
    System.TimeSpan Duration 'get ' : 
    System.DateTime StartTime 'get ' : 
    System.DateTime EndTime 'get ' : 
    System.String Message 'get ' : 
    System.String StackTrace 'get ' : 
    Int32 AssertCount 'get ' : 
    Int32 FailCount 'get ' : 
    Int32 PassCount 'get ' : 
    Int32 SkipCount 'get ' : 
    Int32 InconclusiveCount 'get ' : 
    Boolean HasChildren 'get ' : 
    System.Collections.Generic.IList`1[NUnit.Framework.Interfaces.ITestResult] Children 'get ' : 
    NUnit.Framework.Interfaces.ITest Test 'get ' : 
    System.String Output 'get ' : 
  Methods:
    get_ResultState(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_Name(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_FullName(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_Duration(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_StartTime(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_EndTime(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_Message(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_StackTrace(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_AssertCount(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_FailCount(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_PassCount(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_SkipCount(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_InconclusiveCount(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_HasChildren(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_Children(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_Test(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_Output(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
Class NUnit.Framework.Internal.Commands.SetUpTearDownItem: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(System.Collections.Generic.IList`1[System.Reflection.MethodInfo], System.Collections.Generic.IList`1[System.Reflection.MethodInfo]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Boolean HasMethods 'get ' : 
  Methods:
    get_HasMethods(): PrivateScope, Public, HideBySig, SpecialName
    RunSetUp(TestExecutionContext): PrivateScope, Public, HideBySig
    RunTearDown(TestExecutionContext): PrivateScope, Public, HideBySig
Class NUnit.Framework.Internal.Commands.TestCommand: AutoLayout, AnsiClass, Class, Public, Abstract, BeforeFieldInit
    Void .ctor(NUnit.Framework.Internal.Test): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    NUnit.Framework.Internal.Test Test 'get set' : 
  Methods:
    get_Test(): PrivateScope, Public, HideBySig, SpecialName
    Execute(TestExecutionContext): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Class NUnit.Framework.Internal.Commands.DelegatingTestCommand: AutoLayout, AnsiClass, Class, Public, Abstract, BeforeFieldInit
  :NUnit.Framework.Internal.Commands.TestCommand
Class NUnit.Framework.Internal.Commands.TestActionCommand: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :NUnit.Framework.Internal.Commands.DelegatingTestCommand
    Void .ctor(NUnit.Framework.Internal.Commands.TestCommand): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Execute(TestExecutionContext): PrivateScope, Public, Virtual, HideBySig
Class NUnit.Framework.Internal.Commands.TestActionItem: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(NUnit.Framework.ITestAction): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    BeforeTest(ITest): PrivateScope, Public, HideBySig
    AfterTest(ITest): PrivateScope, Public, HideBySig
Class NUnit.Framework.Internal.Execution.CommandBuilder: AutoLayout, AnsiClass, Class, Public, Abstract, Sealed, BeforeFieldInit
  Methods:
    MakeOneTimeSetUpCommand(TestSuite, List`1, List`1): PrivateScope, Public, Static, HideBySig
    MakeOneTimeTearDownCommand(TestSuite, List`1, List`1): PrivateScope, Public, Static, HideBySig
    MakeTestCommand(TestMethod): PrivateScope, Public, Static, HideBySig
    BuildSetUpTearDownList(Type, Type, Type): PrivateScope, Public, Static, HideBySig
Interface NUnit.Framework.Internal.Execution.IWorkItemDispatcher: AutoLayout, AnsiClass, Class, Public, ClassSemanticsMask, Abstract
  Methods:
    Dispatch(WorkItem): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    CancelRun(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Class NUnit.Framework.Interfaces.ResultState: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(NUnit.Framework.Interfaces.TestStatus): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(NUnit.Framework.Interfaces.TestStatus, System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(NUnit.Framework.Interfaces.TestStatus, NUnit.Framework.Interfaces.FailureSite): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(NUnit.Framework.Interfaces.TestStatus, System.String, NUnit.Framework.Interfaces.FailureSite): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    NUnit.Framework.Interfaces.ResultState Inconclusive : Public, Static, InitOnly
    NUnit.Framework.Interfaces.ResultState Skipped : Public, Static, InitOnly
    NUnit.Framework.Interfaces.ResultState Ignored : Public, Static, InitOnly
    NUnit.Framework.Interfaces.ResultState Success : Public, Static, InitOnly
    NUnit.Framework.Interfaces.ResultState Failure : Public, Static, InitOnly
    NUnit.Framework.Interfaces.ResultState Error : Public, Static, InitOnly
    NUnit.Framework.Interfaces.ResultState Cancelled : Public, Static, InitOnly
    NUnit.Framework.Interfaces.ResultState NotRunnable : Public, Static, InitOnly
    NUnit.Framework.Interfaces.ResultState ChildFailure : Public, Static, InitOnly
    NUnit.Framework.Interfaces.ResultState SetUpFailure : Public, Static, InitOnly
    NUnit.Framework.Interfaces.ResultState SetUpError : Public, Static, InitOnly
    NUnit.Framework.Interfaces.ResultState TearDownError : Public, Static, InitOnly
  Properties:
    NUnit.Framework.Interfaces.TestStatus Status 'get set' : 
    System.String Label 'get set' : 
    NUnit.Framework.Interfaces.FailureSite Site 'get set' : 
  Methods:
    get_Status(): PrivateScope, Public, HideBySig, SpecialName
    get_Label(): PrivateScope, Public, HideBySig, SpecialName
    get_Site(): PrivateScope, Public, HideBySig, SpecialName
    WithSite(FailureSite): PrivateScope, Public, HideBySig
    Equals(Object): PrivateScope, Public, Virtual, HideBySig
    GetHashCode(): PrivateScope, Public, Virtual, HideBySig
    ToString(): PrivateScope, Public, Virtual, HideBySig
Struct NUnit.Framework.Interfaces.FailureSite: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    NUnit.Framework.Interfaces.FailureSite Test = 0 : Public, Static, Literal, HasDefault
    NUnit.Framework.Interfaces.FailureSite SetUp = 1 : Public, Static, Literal, HasDefault
    NUnit.Framework.Interfaces.FailureSite TearDown = 2 : Public, Static, Literal, HasDefault
    NUnit.Framework.Interfaces.FailureSite Parent = 3 : Public, Static, Literal, HasDefault
    NUnit.Framework.Interfaces.FailureSite Child = 4 : Public, Static, Literal, HasDefault
Struct NUnit.Framework.Interfaces.RunState: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    NUnit.Framework.Interfaces.RunState NotRunnable = 0 : Public, Static, Literal, HasDefault
    NUnit.Framework.Interfaces.RunState Runnable = 1 : Public, Static, Literal, HasDefault
    NUnit.Framework.Interfaces.RunState Explicit = 2 : Public, Static, Literal, HasDefault
    NUnit.Framework.Interfaces.RunState Skipped = 3 : Public, Static, Literal, HasDefault
    NUnit.Framework.Interfaces.RunState Ignored = 4 : Public, Static, Literal, HasDefault
Struct NUnit.Framework.Interfaces.TestStatus: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    NUnit.Framework.Interfaces.TestStatus Inconclusive = 0 : Public, Static, Literal, HasDefault
    NUnit.Framework.Interfaces.TestStatus Skipped = 1 : Public, Static, Literal, HasDefault
    NUnit.Framework.Interfaces.TestStatus Passed = 2 : Public, Static, Literal, HasDefault
    NUnit.Framework.Interfaces.TestStatus Failed = 3 : Public, Static, Literal, HasDefault
Class NUnit.Framework.Interfaces.XmlNode: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.String Name 'get ' : 
    System.String TextContent 'get set' : 
    System.String EscapedTextContent 'get ' : 
    NUnit.Framework.Interfaces.AttributeDictionary Attributes 'get ' : 
    NUnit.Framework.Interfaces.NodeList ChildNodes 'get ' : 
    NUnit.Framework.Interfaces.XmlNode FirstChild 'get ' : 
    System.String OuterXml 'get ' : 
  Methods:
    CreateTopLevelElement(String): PrivateScope, Public, Static, HideBySig
    get_Name(): PrivateScope, Public, HideBySig, SpecialName
    get_TextContent(): PrivateScope, Public, HideBySig, SpecialName
    set_TextContent(String): PrivateScope, Public, HideBySig, SpecialName
    get_EscapedTextContent(): PrivateScope, Public, HideBySig, SpecialName
    get_Attributes(): PrivateScope, Public, HideBySig, SpecialName
    get_ChildNodes(): PrivateScope, Public, HideBySig, SpecialName
    get_FirstChild(): PrivateScope, Public, HideBySig, SpecialName
    get_OuterXml(): PrivateScope, Public, HideBySig, SpecialName
    AddElement(String): PrivateScope, Public, HideBySig
    AddAttribute(String, String): PrivateScope, Public, HideBySig
    FindDescendant(String): PrivateScope, Public, HideBySig
    FindDescendants(String): PrivateScope, Public, HideBySig
    WriteTo(XmlWriter): PrivateScope, Public, HideBySig
Class NUnit.Framework.Interfaces.NodeList: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :System.Collections.Generic.List`1[NUnit.Framework.Interfaces.XmlNode]
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class NUnit.Framework.Interfaces.AttributeDictionary: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :System.Collections.Generic.Dictionary`2[System.String,System.String]
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.String Item [System.String] 'get ' : 
  Methods:
    get_Item(String): PrivateScope, Public, HideBySig, SpecialName
Interface NUnit.Framework.Interfaces.ISuiteBuilder: AutoLayout, AnsiClass, Class, Public, ClassSemanticsMask, Abstract
  Methods:
    CanBuildFrom(Type): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    BuildFrom(Type): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Class NUnit.Framework.Internal.Builders.DefaultSuiteBuilder: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    NUnit.Framework.Interfaces.ISuiteBuilder
  Methods:
    CanBuildFrom(Type): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    BuildFrom(Type): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class NUnit.Framework.Internal.Builders.NUnitTestCaseBuilder: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    BuildTestMethod(MethodInfo, Test, ParameterSet): PrivateScope, Public, HideBySig
Class NUnit.Framework.Internal.Execution.SimpleWorkItemDispatcher: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    NUnit.Framework.Internal.Execution.IWorkItemDispatcher
  Methods:
    Dispatch(WorkItem): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    CancelRun(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class NUnit.Framework.Internal.Execution.TextCapture: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :System.IO.TextWriter
    Void .ctor(System.IO.TextWriter): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.Text.Encoding Encoding 'get ' : 
  Methods:
    get_Encoding(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    Write(Char): PrivateScope, Public, Virtual, HideBySig
    Write(String): PrivateScope, Public, Virtual, HideBySig
    WriteLine(String): PrivateScope, Public, Virtual, HideBySig
Class NUnit.Framework.Internal.Execution.WorkShift: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Boolean IsActive 'get set' : 
    System.Collections.Generic.IList`1[NUnit.Framework.Internal.Execution.WorkItemQueue] Queues 'get set' : 
    System.Collections.Generic.IList`1[NUnit.Framework.Internal.Execution.TestWorker] Workers 'get set' : 
    Boolean HasWork 'get ' : 
  Events:
    System.EventHandler EndOfShift: 
  Methods:
    add_EndOfShift(EventHandler): PrivateScope, Public, HideBySig, SpecialName
    remove_EndOfShift(EventHandler): PrivateScope, Public, HideBySig, SpecialName
    get_IsActive(): PrivateScope, Public, HideBySig, SpecialName
    get_Queues(): PrivateScope, Public, HideBySig, SpecialName
    get_Workers(): PrivateScope, Public, HideBySig, SpecialName
    get_HasWork(): PrivateScope, Public, HideBySig, SpecialName
    AddQueue(WorkItemQueue): PrivateScope, Public, HideBySig
    Assign(TestWorker): PrivateScope, Public, HideBySig
    Start(): PrivateScope, Public, HideBySig
    EndShift(): PrivateScope, Public, HideBySig
    ShutDown(): PrivateScope, Public, HideBySig
    Cancel(): PrivateScope, Public, HideBySig
Class NUnit.Framework.Internal.TestFilter: AutoLayout, AnsiClass, Class, Public, Abstract, Serializable, BeforeFieldInit
  Interfaces:
    NUnit.Framework.Interfaces.ITestFilter
  Fields:
    NUnit.Framework.Internal.TestFilter Empty : Public, Static, InitOnly
  Properties:
    Boolean IsEmpty 'get ' : 
  Methods:
    get_IsEmpty(): PrivateScope, Public, HideBySig, SpecialName
    Pass(ITest): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Match(ITest): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    FromXml(String): PrivateScope, Public, Static, HideBySig
Class NUnit.Framework.Internal.Filters.ValueMatchFilter`1[T]: AutoLayout, AnsiClass, Class, Public, Abstract, Serializable, BeforeFieldInit
  Type parameter: T
  :NUnit.Framework.Internal.TestFilter
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(T): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Collections.Generic.IEnumerable`1[T]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.Collections.Generic.IList`1[T] Values 'get ' : 
  Methods:
    get_Values(): PrivateScope, Public, HideBySig, SpecialName
    Add(T): PrivateScope, Public, HideBySig
    Match(ITest): PrivateScope, Public, Virtual, HideBySig
Class NUnit.Framework.Internal.Filters.IdFilter: AutoLayout, AnsiClass, Class, Public, Serializable, BeforeFieldInit
  :NUnit.Framework.Internal.Filters.ValueMatchFilter`1[System.Int32]
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Collections.Generic.IEnumerable`1[System.Int32]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Interface NUnit.Framework.Interfaces.IFixtureBuilder: AutoLayout, AnsiClass, Class, Public, ClassSemanticsMask, Abstract
  Methods:
    BuildFrom(Type): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Interface NUnit.Framework.Interfaces.IImplyFixture: AutoLayout, AnsiClass, Class, Public, ClassSemanticsMask, Abstract
Class NUnit.Framework.Internal.Builders.NamespaceTreeBuilder: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(NUnit.Framework.Internal.TestSuite): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    NUnit.Framework.Internal.TestSuite RootSuite 'get ' : 
  Methods:
    get_RootSuite(): PrivateScope, Public, HideBySig, SpecialName
    Add(IList): PrivateScope, Public, HideBySig
    Add(TestSuite): PrivateScope, Public, HideBySig
Class NUnit.Framework.Internal.Commands.MaxTimeCommand: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :NUnit.Framework.Internal.Commands.DelegatingTestCommand
    Void .ctor(NUnit.Framework.Internal.Commands.TestCommand, Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Execute(TestExecutionContext): PrivateScope, Public, Virtual, HideBySig
Class NUnit.Framework.Internal.Commands.OneTimeSetUpCommand: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :NUnit.Framework.Internal.Commands.TestCommand
    Void .ctor(NUnit.Framework.Internal.TestSuite, System.Collections.Generic.List`1[NUnit.Framework.Internal.Commands.SetUpTearDownItem], System.Collections.Generic.List`1[NUnit.Framework.Internal.Commands.TestActionItem]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Execute(TestExecutionContext): PrivateScope, Public, Virtual, HideBySig
Class NUnit.Framework.Internal.Commands.OneTimeTearDownCommand: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :NUnit.Framework.Internal.Commands.TestCommand
    Void .ctor(NUnit.Framework.Internal.TestSuite, System.Collections.Generic.List`1[NUnit.Framework.Internal.Commands.SetUpTearDownItem], System.Collections.Generic.List`1[NUnit.Framework.Internal.Commands.TestActionItem]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Execute(TestExecutionContext): PrivateScope, Public, Virtual, HideBySig
Class NUnit.Framework.Internal.Commands.RepeatedTestCommand: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :NUnit.Framework.Internal.Commands.DelegatingTestCommand
    Void .ctor(NUnit.Framework.Internal.Commands.TestCommand, Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Execute(TestExecutionContext): PrivateScope, Public, Virtual, HideBySig
Class NUnit.Framework.Internal.Commands.SetUpTearDownCommand: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :NUnit.Framework.Internal.Commands.DelegatingTestCommand
    Void .ctor(NUnit.Framework.Internal.Commands.TestCommand): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Execute(TestExecutionContext): PrivateScope, Public, Virtual, HideBySig
Class NUnit.Framework.Internal.Commands.SkipCommand: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :NUnit.Framework.Internal.Commands.TestCommand
    Void .ctor(NUnit.Framework.Internal.Test): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Execute(TestExecutionContext): PrivateScope, Public, Virtual, HideBySig
Class NUnit.Framework.Internal.Commands.TestMethodCommand: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :NUnit.Framework.Internal.Commands.TestCommand
    Void .ctor(NUnit.Framework.Internal.TestMethod): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Execute(TestExecutionContext): PrivateScope, Public, Virtual, HideBySig
Class NUnit.Framework.Internal.Commands.TheoryResultCommand: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :NUnit.Framework.Internal.Commands.DelegatingTestCommand
    Void .ctor(NUnit.Framework.Internal.Commands.TestCommand): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Execute(TestExecutionContext): PrivateScope, Public, Virtual, HideBySig
Class NUnit.Framework.Internal.Execution.WorkItem: AutoLayout, AnsiClass, Class, Public, Abstract, BeforeFieldInit
    Void .ctor(NUnit.Framework.Internal.Test): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    NUnit.Framework.Internal.Execution.WorkItemState State 'get ' : 
    NUnit.Framework.Internal.Test Test 'get ' : 
    NUnit.Framework.Internal.TestExecutionContext Context 'get ' : 
    System.Collections.Generic.List`1[NUnit.Framework.ITestAction] Actions 'get ' : 
    Boolean IsParallelizable 'get ' : 
    NUnit.Framework.Internal.TestResult Result 'get set' : 
  Events:
    System.EventHandler Completed: 
  Methods:
    CreateWorkItem(ITest, ITestFilter): PrivateScope, Public, Static, HideBySig
    InitializeContext(TestExecutionContext): PrivateScope, Public, HideBySig
    add_Completed(EventHandler): PrivateScope, Public, HideBySig, SpecialName
    remove_Completed(EventHandler): PrivateScope, Public, HideBySig, SpecialName
    get_State(): PrivateScope, Public, HideBySig, SpecialName
    get_Test(): PrivateScope, Public, HideBySig, SpecialName
    get_Context(): PrivateScope, Public, HideBySig, SpecialName
    get_Actions(): PrivateScope, Public, HideBySig, SpecialName
    get_IsParallelizable(): PrivateScope, Public, HideBySig, SpecialName
    get_Result(): PrivateScope, Public, HideBySig, SpecialName
    Execute(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class NUnit.Framework.Internal.Execution.CompositeWorkItem: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :NUnit.Framework.Internal.Execution.WorkItem
    Void .ctor(NUnit.Framework.Internal.TestSuite, NUnit.Framework.Interfaces.ITestFilter): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class NUnit.Framework.Internal.Execution.CountdownEvent: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Int32 InitialCount 'get ' : 
    Int32 CurrentCount 'get ' : 
  Methods:
    get_InitialCount(): PrivateScope, Public, HideBySig, SpecialName
    get_CurrentCount(): PrivateScope, Public, HideBySig, SpecialName
    Signal(): PrivateScope, Public, HideBySig
    Wait(): PrivateScope, Public, HideBySig
Struct NUnit.Framework.Internal.Execution.EventPumpState: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    NUnit.Framework.Internal.Execution.EventPumpState Stopped = 0 : Public, Static, Literal, HasDefault
    NUnit.Framework.Internal.Execution.EventPumpState Pumping = 1 : Public, Static, Literal, HasDefault
    NUnit.Framework.Internal.Execution.EventPumpState Stopping = 2 : Public, Static, Literal, HasDefault
Class NUnit.Framework.Internal.Execution.EventPump: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(NUnit.Framework.Interfaces.ITestListener, NUnit.Framework.Internal.Execution.EventQueue): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.IDisposable
  Properties:
    NUnit.Framework.Internal.Execution.EventPumpState PumpState 'get set' : 
    System.String Name 'get set' : 
  Methods:
    get_PumpState(): PrivateScope, Public, HideBySig, SpecialName
    set_PumpState(EventPumpState): PrivateScope, Public, HideBySig, SpecialName
    get_Name(): PrivateScope, Public, HideBySig, SpecialName
    set_Name(String): PrivateScope, Public, HideBySig, SpecialName
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Start(): PrivateScope, Public, HideBySig
    Stop(): PrivateScope, Public, HideBySig
Class NUnit.Framework.Internal.Execution.Event: AutoLayout, AnsiClass, Class, Public, Abstract, BeforeFieldInit
  Properties:
    Boolean IsSynchronous 'get ' : 
  Methods:
    Send(ITestListener): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    get_IsSynchronous(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
Class NUnit.Framework.Internal.Execution.TestStartedEvent: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :NUnit.Framework.Internal.Execution.Event
    Void .ctor(NUnit.Framework.Interfaces.ITest): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Send(ITestListener): PrivateScope, Public, Virtual, HideBySig
Class NUnit.Framework.Internal.Execution.TestFinishedEvent: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :NUnit.Framework.Internal.Execution.Event
    Void .ctor(NUnit.Framework.Interfaces.ITestResult): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Send(ITestListener): PrivateScope, Public, Virtual, HideBySig
Class NUnit.Framework.Internal.Execution.EventQueue: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Int32 Count 'get ' : 
  Methods:
    get_Count(): PrivateScope, Public, HideBySig, SpecialName
    SetWaitHandleForSynchronizedEvents(AutoResetEvent): PrivateScope, Public, HideBySig
    Enqueue(Event): PrivateScope, Public, HideBySig
    Dequeue(Boolean): PrivateScope, Public, HideBySig
    Stop(): PrivateScope, Public, HideBySig
Class NUnit.Framework.Internal.Execution.QueuingEventListener: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    NUnit.Framework.Interfaces.ITestListener
  Properties:
    NUnit.Framework.Internal.Execution.EventQueue Events 'get ' : 
  Methods:
    get_Events(): PrivateScope, Public, HideBySig, SpecialName
    TestStarted(ITest): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    TestFinished(ITestResult): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class NUnit.Framework.Internal.Execution.SimpleWorkItem: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :NUnit.Framework.Internal.Execution.WorkItem
    Void .ctor(NUnit.Framework.Internal.TestMethod): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class NUnit.Framework.Internal.Execution.TestWorker: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(NUnit.Framework.Internal.Execution.WorkItemQueue, System.String, System.Threading.ApartmentState): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.String Name 'get ' : 
    Boolean IsAlive 'get ' : 
  Events:
    System.EventHandler Busy: 
    System.EventHandler Idle: 
  Methods:
    add_Busy(EventHandler): PrivateScope, Public, HideBySig, SpecialName
    remove_Busy(EventHandler): PrivateScope, Public, HideBySig, SpecialName
    add_Idle(EventHandler): PrivateScope, Public, HideBySig, SpecialName
    remove_Idle(EventHandler): PrivateScope, Public, HideBySig, SpecialName
    get_Name(): PrivateScope, Public, HideBySig, SpecialName
    get_IsAlive(): PrivateScope, Public, HideBySig, SpecialName
    Start(): PrivateScope, Public, HideBySig
    Cancel(): PrivateScope, Public, HideBySig
Class NUnit.Framework.Constraints.MessageWriter: AutoLayout, AnsiClass, Class, Public, Abstract, BeforeFieldInit
  :System.IO.StringWriter
  Properties:
    Int32 MaxLineLength 'get set' : 
  Methods:
    get_MaxLineLength(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    set_MaxLineLength(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    WriteMessageLine(String, Object[]): PrivateScope, Public, HideBySig
    WriteMessageLine(Int32, String, Object[]): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    DisplayDifferences(ConstraintResult): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    DisplayDifferences(Object, Object): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    DisplayDifferences(Object, Object, Tolerance): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    DisplayStringDifferences(String, String, Int32, Boolean, Boolean): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    WriteActualValue(Object): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    WriteValue(Object): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    WriteCollectionElements(IEnumerable, Int64, Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Class NUnit.Framework.Internal.TextMessageWriter: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :NUnit.Framework.Constraints.MessageWriter
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, System.Object[]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    System.String Pfx_Expected : Public, Static, InitOnly
    System.String Pfx_Actual : Public, Static, InitOnly
    Int32 PrefixLength : Public, Static, InitOnly
  Properties:
    Int32 MaxLineLength 'get set' : 
  Methods:
    get_MaxLineLength(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_MaxLineLength(Int32): PrivateScope, Public, Virtual, HideBySig, SpecialName
    WriteMessageLine(Int32, String, Object[]): PrivateScope, Public, Virtual, HideBySig
    DisplayDifferences(ConstraintResult): PrivateScope, Public, Virtual, HideBySig
    DisplayDifferences(Object, Object): PrivateScope, Public, Virtual, HideBySig
    DisplayDifferences(Object, Object, Tolerance): PrivateScope, Public, Virtual, HideBySig
    DisplayStringDifferences(String, String, Int32, Boolean, Boolean): PrivateScope, Public, Virtual, HideBySig
    WriteActualValue(Object): PrivateScope, Public, Virtual, HideBySig
    WriteValue(Object): PrivateScope, Public, Virtual, HideBySig
    WriteCollectionElements(IEnumerable, Int64, Int32): PrivateScope, Public, Virtual, HideBySig
Class NUnit.Framework.Internal.Execution.ParallelWorkItemDispatcher: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    NUnit.Framework.Internal.Execution.IWorkItemDispatcher
  Properties:
    System.Collections.Generic.IEnumerable`1[NUnit.Framework.Internal.Execution.WorkShift] Shifts 'get set' : 
  Methods:
    get_Shifts(): PrivateScope, Public, HideBySig, SpecialName
    Dispatch(WorkItem): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    CancelRun(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Struct NUnit.Framework.Internal.Execution.WorkItemQueueState: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    NUnit.Framework.Internal.Execution.WorkItemQueueState Paused = 0 : Public, Static, Literal, HasDefault
    NUnit.Framework.Internal.Execution.WorkItemQueueState Running = 1 : Public, Static, Literal, HasDefault
    NUnit.Framework.Internal.Execution.WorkItemQueueState Stopped = 2 : Public, Static, Literal, HasDefault
Class NUnit.Framework.Internal.Execution.WorkItemQueue: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.String Name 'get set' : 
    Int32 ItemsProcessed 'get set' : 
    Int32 MaxCount 'get set' : 
    NUnit.Framework.Internal.Execution.WorkItemQueueState State 'get set' : 
    Boolean IsEmpty 'get ' : 
  Methods:
    get_Name(): PrivateScope, Public, HideBySig, SpecialName
    get_ItemsProcessed(): PrivateScope, Public, HideBySig, SpecialName
    get_MaxCount(): PrivateScope, Public, HideBySig, SpecialName
    get_State(): PrivateScope, Public, HideBySig, SpecialName
    get_IsEmpty(): PrivateScope, Public, HideBySig, SpecialName
    Enqueue(WorkItem): PrivateScope, Public, HideBySig
    Dequeue(): PrivateScope, Public, HideBySig
    Start(): PrivateScope, Public, HideBySig
    Stop(): PrivateScope, Public, HideBySig
    Pause(): PrivateScope, Public, HideBySig
Struct NUnit.Framework.Internal.Execution.WorkItemState: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    NUnit.Framework.Internal.Execution.WorkItemState Ready = 0 : Public, Static, Literal, HasDefault
    NUnit.Framework.Internal.Execution.WorkItemState Running = 1 : Public, Static, Literal, HasDefault
    NUnit.Framework.Internal.Execution.WorkItemState Complete = 2 : Public, Static, Literal, HasDefault
Class NUnit.Framework.Internal.RandomGenerator: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Int32 seed : Public, InitOnly
  Methods:
    GetInt(): PrivateScope, Public, HideBySig
    GetInt(Int32, Int32): PrivateScope, Public, HideBySig
    GetShort(): PrivateScope, Public, HideBySig
    GetShort(Int16, Int16): PrivateScope, Public, HideBySig
    GetByte(): PrivateScope, Public, HideBySig
    GetByte(Byte, Byte): PrivateScope, Public, HideBySig
    GetBool(): PrivateScope, Public, HideBySig
    GetBool(Double): PrivateScope, Public, HideBySig
    GetDouble(): PrivateScope, Public, HideBySig
    GetFloat(): PrivateScope, Public, HideBySig
    GetEnum(): PrivateScope, Public, HideBySig
Class NUnit.Framework.Internal.StackFilter: AutoLayout, AnsiClass, Class, Public, Abstract, Sealed, BeforeFieldInit
  Methods:
    Filter(String): PrivateScope, Public, Static, HideBySig
Class NUnit.Framework.Internal.StringUtil: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Compare(String, String, Boolean): PrivateScope, Public, Static, HideBySig
    StringsEqual(String, String, Boolean): PrivateScope, Public, Static, HideBySig
Class NUnit.Framework.Internal.PropertyNames: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    System.String AppDomain = _APPDOMAIN : Public, Static, Literal, HasDefault
    System.String JoinType = _JOINTYPE : Public, Static, Literal, HasDefault
    System.String ProcessID = _PID : Public, Static, Literal, HasDefault
    System.String ProviderStackTrace = _PROVIDERSTACKTRACE : Public, Static, Literal, HasDefault
    System.String SkipReason = _SKIPREASON : Public, Static, Literal, HasDefault
    System.String Author = Author : Public, Static, Literal, HasDefault
    System.String ApartmentState = ApartmentState : Public, Static, Literal, HasDefault
    System.String Category = Category : Public, Static, Literal, HasDefault
    System.String Description = Description : Public, Static, Literal, HasDefault
    System.String LevelOfParallelization = LevelOfParallelization : Public, Static, Literal, HasDefault
    System.String MaxTime = MaxTime : Public, Static, Literal, HasDefault
    System.String ParallelScope = ParallelScope : Public, Static, Literal, HasDefault
    System.String RepeatCount = Repeat : Public, Static, Literal, HasDefault
    System.String RequiresThread = RequiresThread : Public, Static, Literal, HasDefault
    System.String SetCulture = SetCulture : Public, Static, Literal, HasDefault
    System.String SetUICulture = SetUICulture : Public, Static, Literal, HasDefault
    System.String TestOf = TestOf : Public, Static, Literal, HasDefault
    System.String Timeout = Timeout : Public, Static, Literal, HasDefault
    System.String IgnoreUntilDate = IgnoreUntilDate : Public, Static, Literal, HasDefault
Class NUnit.Framework.TestDelegate: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.MulticastDelegate
    Void .ctor(System.Object, IntPtr): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Invoke(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    BeginInvoke(AsyncCallback, Object): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    EndInvoke(IAsyncResult): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class NUnit.Framework.Assert: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  Methods:
    GreaterOrEqual(Double, Double, String): PrivateScope, Public, Static, HideBySig
    GreaterOrEqual(Double, Double): PrivateScope, Public, Static, HideBySig
    GreaterOrEqual(Single, Single, String, Object[]): PrivateScope, Public, Static, HideBySig
    GreaterOrEqual(Single, Single, String): PrivateScope, Public, Static, HideBySig
    GreaterOrEqual(Single, Single): PrivateScope, Public, Static, HideBySig
    GreaterOrEqual(IComparable, IComparable, String, Object[]): PrivateScope, Public, Static, HideBySig
    GreaterOrEqual(IComparable, IComparable, String): PrivateScope, Public, Static, HideBySig
    GreaterOrEqual(IComparable, IComparable): PrivateScope, Public, Static, HideBySig
    LessOrEqual(Int32, Int32, String, Object[]): PrivateScope, Public, Static, HideBySig
    LessOrEqual(Int32, Int32, String): PrivateScope, Public, Static, HideBySig
    LessOrEqual(Int32, Int32): PrivateScope, Public, Static, HideBySig
    LessOrEqual(UInt32, UInt32, String, Object[]): PrivateScope, Public, Static, HideBySig
    LessOrEqual(UInt32, UInt32, String): PrivateScope, Public, Static, HideBySig
    LessOrEqual(UInt32, UInt32): PrivateScope, Public, Static, HideBySig
    LessOrEqual(Int64, Int64, String, Object[]): PrivateScope, Public, Static, HideBySig
    LessOrEqual(Int64, Int64, String): PrivateScope, Public, Static, HideBySig
    LessOrEqual(Int64, Int64): PrivateScope, Public, Static, HideBySig
    LessOrEqual(UInt64, UInt64, String, Object[]): PrivateScope, Public, Static, HideBySig
    LessOrEqual(UInt64, UInt64, String): PrivateScope, Public, Static, HideBySig
    LessOrEqual(UInt64, UInt64): PrivateScope, Public, Static, HideBySig
    LessOrEqual(Decimal, Decimal, String, Object[]): PrivateScope, Public, Static, HideBySig
    LessOrEqual(Decimal, Decimal, String): PrivateScope, Public, Static, HideBySig
    LessOrEqual(Decimal, Decimal): PrivateScope, Public, Static, HideBySig
    LessOrEqual(Double, Double, String, Object[]): PrivateScope, Public, Static, HideBySig
    LessOrEqual(Double, Double, String): PrivateScope, Public, Static, HideBySig
    LessOrEqual(Double, Double): PrivateScope, Public, Static, HideBySig
    LessOrEqual(Single, Single, String, Object[]): PrivateScope, Public, Static, HideBySig
    LessOrEqual(Single, Single, String): PrivateScope, Public, Static, HideBySig
    LessOrEqual(Single, Single): PrivateScope, Public, Static, HideBySig
    LessOrEqual(IComparable, IComparable, String, Object[]): PrivateScope, Public, Static, HideBySig
    LessOrEqual(IComparable, IComparable, String): PrivateScope, Public, Static, HideBySig
    LessOrEqual(IComparable, IComparable): PrivateScope, Public, Static, HideBySig
    Contains(Object, ICollection, String, Object[]): PrivateScope, Public, Static, HideBySig
    Contains(Object, ICollection, String): PrivateScope, Public, Static, HideBySig
    Contains(Object, ICollection): PrivateScope, Public, Static, HideBySig
    IsNotAssignableFrom(Object, String, Object[]): PrivateScope, Public, Static, HideBySig
    IsNotAssignableFrom(Object, String): PrivateScope, Public, Static, HideBySig
    IsNotAssignableFrom(Object): PrivateScope, Public, Static, HideBySig
    IsInstanceOf(Type, Object, String, Object[]): PrivateScope, Public, Static, HideBySig
    IsInstanceOf(Type, Object, String): PrivateScope, Public, Static, HideBySig
    IsInstanceOf(Type, Object): PrivateScope, Public, Static, HideBySig
    IsInstanceOf(Object, String, Object[]): PrivateScope, Public, Static, HideBySig
    IsInstanceOf(Object, String): PrivateScope, Public, Static, HideBySig
    IsInstanceOf(Object): PrivateScope, Public, Static, HideBySig
    IsNotInstanceOf(Type, Object, String, Object[]): PrivateScope, Public, Static, HideBySig
    IsNotInstanceOf(Type, Object, String): PrivateScope, Public, Static, HideBySig
    IsNotInstanceOf(Type, Object): PrivateScope, Public, Static, HideBySig
    IsNotInstanceOf(Object, String, Object[]): PrivateScope, Public, Static, HideBySig
    IsNotInstanceOf(Object, String): PrivateScope, Public, Static, HideBySig
    IsNotInstanceOf(Object): PrivateScope, Public, Static, HideBySig
    Greater(Int32, Int32, String, Object[]): PrivateScope, Public, Static, HideBySig
    Greater(Int32, Int32, String): PrivateScope, Public, Static, HideBySig
    Greater(Int32, Int32): PrivateScope, Public, Static, HideBySig
    Greater(UInt32, UInt32, String, Object[]): PrivateScope, Public, Static, HideBySig
    Greater(UInt32, UInt32, String): PrivateScope, Public, Static, HideBySig
    Greater(UInt32, UInt32): PrivateScope, Public, Static, HideBySig
    Greater(Int64, Int64, String, Object[]): PrivateScope, Public, Static, HideBySig
    Greater(Int64, Int64, String): PrivateScope, Public, Static, HideBySig
    Greater(Int64, Int64): PrivateScope, Public, Static, HideBySig
    Greater(UInt64, UInt64, String, Object[]): PrivateScope, Public, Static, HideBySig
    Greater(UInt64, UInt64, String): PrivateScope, Public, Static, HideBySig
    Greater(UInt64, UInt64): PrivateScope, Public, Static, HideBySig
    Greater(Decimal, Decimal, String, Object[]): PrivateScope, Public, Static, HideBySig
    Greater(Decimal, Decimal, String): PrivateScope, Public, Static, HideBySig
    Greater(Decimal, Decimal): PrivateScope, Public, Static, HideBySig
    Greater(Double, Double, String, Object[]): PrivateScope, Public, Static, HideBySig
    Greater(Double, Double, String): PrivateScope, Public, Static, HideBySig
    Greater(Double, Double): PrivateScope, Public, Static, HideBySig
    Greater(Single, Single, String, Object[]): PrivateScope, Public, Static, HideBySig
    Greater(Single, Single, String): PrivateScope, Public, Static, HideBySig
    Greater(Single, Single): PrivateScope, Public, Static, HideBySig
    Greater(IComparable, IComparable, String, Object[]): PrivateScope, Public, Static, HideBySig
    Greater(IComparable, IComparable, String): PrivateScope, Public, Static, HideBySig
    Greater(IComparable, IComparable): PrivateScope, Public, Static, HideBySig
    Less(Int32, Int32, String, Object[]): PrivateScope, Public, Static, HideBySig
    Less(Int32, Int32, String): PrivateScope, Public, Static, HideBySig
    Less(Int32, Int32): PrivateScope, Public, Static, HideBySig
    Less(UInt32, UInt32, String, Object[]): PrivateScope, Public, Static, HideBySig
    Less(UInt32, UInt32, String): PrivateScope, Public, Static, HideBySig
    Less(UInt32, UInt32): PrivateScope, Public, Static, HideBySig
    Less(Int64, Int64, String, Object[]): PrivateScope, Public, Static, HideBySig
    Less(Int64, Int64, String): PrivateScope, Public, Static, HideBySig
    Less(Int64, Int64): PrivateScope, Public, Static, HideBySig
    Less(UInt64, UInt64, String, Object[]): PrivateScope, Public, Static, HideBySig
    Less(UInt64, UInt64, String): PrivateScope, Public, Static, HideBySig
    Less(UInt64, UInt64): PrivateScope, Public, Static, HideBySig
    Less(Decimal, Decimal, String, Object[]): PrivateScope, Public, Static, HideBySig
    Less(Decimal, Decimal, String): PrivateScope, Public, Static, HideBySig
    Less(Decimal, Decimal): PrivateScope, Public, Static, HideBySig
    Less(Double, Double, String, Object[]): PrivateScope, Public, Static, HideBySig
    Less(Double, Double, String): PrivateScope, Public, Static, HideBySig
    Less(Double, Double): PrivateScope, Public, Static, HideBySig
    Less(Single, Single, String, Object[]): PrivateScope, Public, Static, HideBySig
    Less(Single, Single, String): PrivateScope, Public, Static, HideBySig
    Less(Single, Single): PrivateScope, Public, Static, HideBySig
    Less(IComparable, IComparable, String, Object[]): PrivateScope, Public, Static, HideBySig
    Less(IComparable, IComparable, String): PrivateScope, Public, Static, HideBySig
    Less(IComparable, IComparable): PrivateScope, Public, Static, HideBySig
    GreaterOrEqual(Int32, Int32, String, Object[]): PrivateScope, Public, Static, HideBySig
    GreaterOrEqual(Int32, Int32, String): PrivateScope, Public, Static, HideBySig
    GreaterOrEqual(Int32, Int32): PrivateScope, Public, Static, HideBySig
    GreaterOrEqual(UInt32, UInt32, String, Object[]): PrivateScope, Public, Static, HideBySig
    GreaterOrEqual(UInt32, UInt32, String): PrivateScope, Public, Static, HideBySig
    GreaterOrEqual(UInt32, UInt32): PrivateScope, Public, Static, HideBySig
    GreaterOrEqual(Int64, Int64, String, Object[]): PrivateScope, Public, Static, HideBySig
    GreaterOrEqual(Int64, Int64, String): PrivateScope, Public, Static, HideBySig
    GreaterOrEqual(Int64, Int64): PrivateScope, Public, Static, HideBySig
    GreaterOrEqual(UInt64, UInt64, String, Object[]): PrivateScope, Public, Static, HideBySig
    GreaterOrEqual(UInt64, UInt64, String): PrivateScope, Public, Static, HideBySig
    GreaterOrEqual(UInt64, UInt64): PrivateScope, Public, Static, HideBySig
    GreaterOrEqual(Decimal, Decimal, String, Object[]): PrivateScope, Public, Static, HideBySig
    GreaterOrEqual(Decimal, Decimal, String): PrivateScope, Public, Static, HideBySig
    GreaterOrEqual(Decimal, Decimal): PrivateScope, Public, Static, HideBySig
    GreaterOrEqual(Double, Double, String, Object[]): PrivateScope, Public, Static, HideBySig
    IsNull(Object): PrivateScope, Public, Static, HideBySig
    AreEqual(Int32, Int32, String, Object[]): PrivateScope, Public, Static, HideBySig
    AreEqual(Int32, Int32, String): PrivateScope, Public, Static, HideBySig
    AreEqual(Int32, Int32): PrivateScope, Public, Static, HideBySig
    AreEqual(Int64, Int64, String, Object[]): PrivateScope, Public, Static, HideBySig
    AreEqual(Int64, Int64, String): PrivateScope, Public, Static, HideBySig
    AreEqual(Int64, Int64): PrivateScope, Public, Static, HideBySig
    AreEqual(UInt32, UInt32, String, Object[]): PrivateScope, Public, Static, HideBySig
    AreEqual(UInt32, UInt32, String): PrivateScope, Public, Static, HideBySig
    AreEqual(UInt32, UInt32): PrivateScope, Public, Static, HideBySig
    AreEqual(UInt64, UInt64, String, Object[]): PrivateScope, Public, Static, HideBySig
    AreEqual(UInt64, UInt64, String): PrivateScope, Public, Static, HideBySig
    AreEqual(UInt64, UInt64): PrivateScope, Public, Static, HideBySig
    AreEqual(Decimal, Decimal, String, Object[]): PrivateScope, Public, Static, HideBySig
    AreEqual(Decimal, Decimal, String): PrivateScope, Public, Static, HideBySig
    AreEqual(Decimal, Decimal): PrivateScope, Public, Static, HideBySig
    AreEqual(Double, Double, Double, String, Object[]): PrivateScope, Public, Static, HideBySig
    AreEqual(Double, Double, Double, String): PrivateScope, Public, Static, HideBySig
    AreEqual(Double, Double, Double): PrivateScope, Public, Static, HideBySig
    AreEqual(Double, Nullable`1, Double, String, Object[]): PrivateScope, Public, Static, HideBySig
    AreEqual(Double, Nullable`1, Double, String): PrivateScope, Public, Static, HideBySig
    AreEqual(Double, Nullable`1, Double): PrivateScope, Public, Static, HideBySig
    AreEqual(Object, Object, String, Object[]): PrivateScope, Public, Static, HideBySig
    AreEqual(Object, Object, String): PrivateScope, Public, Static, HideBySig
    AreEqual(Object, Object): PrivateScope, Public, Static, HideBySig
    AreNotEqual(Int32, Int32, String, Object[]): PrivateScope, Public, Static, HideBySig
    AreNotEqual(Int32, Int32, String): PrivateScope, Public, Static, HideBySig
    AreNotEqual(Int32, Int32): PrivateScope, Public, Static, HideBySig
    AreNotEqual(Int64, Int64, String, Object[]): PrivateScope, Public, Static, HideBySig
    AreNotEqual(Int64, Int64, String): PrivateScope, Public, Static, HideBySig
    AreNotEqual(Int64, Int64): PrivateScope, Public, Static, HideBySig
    AreNotEqual(UInt32, UInt32, String, Object[]): PrivateScope, Public, Static, HideBySig
    AreNotEqual(UInt32, UInt32, String): PrivateScope, Public, Static, HideBySig
    AreNotEqual(UInt32, UInt32): PrivateScope, Public, Static, HideBySig
    AreNotEqual(UInt64, UInt64, String, Object[]): PrivateScope, Public, Static, HideBySig
    AreNotEqual(UInt64, UInt64, String): PrivateScope, Public, Static, HideBySig
    AreNotEqual(UInt64, UInt64): PrivateScope, Public, Static, HideBySig
    AreNotEqual(Decimal, Decimal, String, Object[]): PrivateScope, Public, Static, HideBySig
    AreNotEqual(Decimal, Decimal, String): PrivateScope, Public, Static, HideBySig
    AreNotEqual(Decimal, Decimal): PrivateScope, Public, Static, HideBySig
    AreNotEqual(Single, Single, String, Object[]): PrivateScope, Public, Static, HideBySig
    AreNotEqual(Single, Single, String): PrivateScope, Public, Static, HideBySig
    AreNotEqual(Single, Single): PrivateScope, Public, Static, HideBySig
    AreNotEqual(Double, Double, String, Object[]): PrivateScope, Public, Static, HideBySig
    AreNotEqual(Double, Double, String): PrivateScope, Public, Static, HideBySig
    AreNotEqual(Double, Double): PrivateScope, Public, Static, HideBySig
    AreNotEqual(Object, Object, String, Object[]): PrivateScope, Public, Static, HideBySig
    AreNotEqual(Object, Object, String): PrivateScope, Public, Static, HideBySig
    AreNotEqual(Object, Object): PrivateScope, Public, Static, HideBySig
    AreSame(Object, Object, String, Object[]): PrivateScope, Public, Static, HideBySig
    AreSame(Object, Object, String): PrivateScope, Public, Static, HideBySig
    AreSame(Object, Object): PrivateScope, Public, Static, HideBySig
    AreNotSame(Object, Object, String, Object[]): PrivateScope, Public, Static, HideBySig
    AreNotSame(Object, Object, String): PrivateScope, Public, Static, HideBySig
    AreNotSame(Object, Object): PrivateScope, Public, Static, HideBySig
    IsNaN(Double, String, Object[]): PrivateScope, Public, Static, HideBySig
    IsNaN(Double, String): PrivateScope, Public, Static, HideBySig
    IsNaN(Double): PrivateScope, Public, Static, HideBySig
    IsNaN(Nullable`1, String, Object[]): PrivateScope, Public, Static, HideBySig
    IsNaN(Nullable`1, String): PrivateScope, Public, Static, HideBySig
    IsNaN(Nullable`1): PrivateScope, Public, Static, HideBySig
    IsEmpty(String, String, Object[]): PrivateScope, Public, Static, HideBySig
    IsEmpty(String, String): PrivateScope, Public, Static, HideBySig
    IsEmpty(String): PrivateScope, Public, Static, HideBySig
    IsEmpty(IEnumerable, String, Object[]): PrivateScope, Public, Static, HideBySig
    IsEmpty(IEnumerable, String): PrivateScope, Public, Static, HideBySig
    IsEmpty(IEnumerable): PrivateScope, Public, Static, HideBySig
    IsNotEmpty(String, String, Object[]): PrivateScope, Public, Static, HideBySig
    IsNotEmpty(String, String): PrivateScope, Public, Static, HideBySig
    IsNotEmpty(String): PrivateScope, Public, Static, HideBySig
    IsNotEmpty(IEnumerable, String, Object[]): PrivateScope, Public, Static, HideBySig
    IsNotEmpty(IEnumerable, String): PrivateScope, Public, Static, HideBySig
    IsNotEmpty(IEnumerable): PrivateScope, Public, Static, HideBySig
    IsAssignableFrom(Type, Object, String, Object[]): PrivateScope, Public, Static, HideBySig
    IsAssignableFrom(Type, Object, String): PrivateScope, Public, Static, HideBySig
    IsAssignableFrom(Type, Object): PrivateScope, Public, Static, HideBySig
    IsAssignableFrom(Object, String, Object[]): PrivateScope, Public, Static, HideBySig
    IsAssignableFrom(Object, String): PrivateScope, Public, Static, HideBySig
    IsAssignableFrom(Object): PrivateScope, Public, Static, HideBySig
    IsNotAssignableFrom(Type, Object, String, Object[]): PrivateScope, Public, Static, HideBySig
    IsNotAssignableFrom(Type, Object, String): PrivateScope, Public, Static, HideBySig
    IsNotAssignableFrom(Type, Object): PrivateScope, Public, Static, HideBySig
    Equals(Object, Object): PrivateScope, Public, Static, HideBySig
    ReferenceEquals(Object, Object): PrivateScope, Public, Static, HideBySig
    Pass(String, Object[]): PrivateScope, Public, Static, HideBySig
    Pass(String): PrivateScope, Public, Static, HideBySig
    Pass(): PrivateScope, Public, Static, HideBySig
    Fail(String, Object[]): PrivateScope, Public, Static, HideBySig
    Fail(String): PrivateScope, Public, Static, HideBySig
    Fail(): PrivateScope, Public, Static, HideBySig
    Ignore(String, Object[]): PrivateScope, Public, Static, HideBySig
    Ignore(String): PrivateScope, Public, Static, HideBySig
    Ignore(): PrivateScope, Public, Static, HideBySig
    Inconclusive(String, Object[]): PrivateScope, Public, Static, HideBySig
    Inconclusive(String): PrivateScope, Public, Static, HideBySig
    Inconclusive(): PrivateScope, Public, Static, HideBySig
    That(Boolean, String, Object[]): PrivateScope, Public, Static, HideBySig
    That(Boolean, String): PrivateScope, Public, Static, HideBySig
    That(Boolean): PrivateScope, Public, Static, HideBySig
    That(ActualValueDelegate`1, IResolveConstraint): PrivateScope, Public, Static, HideBySig
    That(ActualValueDelegate`1, IResolveConstraint, String): PrivateScope, Public, Static, HideBySig
    That(ActualValueDelegate`1, IResolveConstraint, String, Object[]): PrivateScope, Public, Static, HideBySig
    That(TestDelegate, IResolveConstraint): PrivateScope, Public, Static, HideBySig
    That(TActual, IResolveConstraint): PrivateScope, Public, Static, HideBySig
    That(TActual, IResolveConstraint, String): PrivateScope, Public, Static, HideBySig
    That(TActual, IResolveConstraint, String, Object[]): PrivateScope, Public, Static, HideBySig
    That(TActual&, IResolveConstraint): PrivateScope, Public, Static, HideBySig
    That(TActual&, IResolveConstraint, String): PrivateScope, Public, Static, HideBySig
    That(TActual&, IResolveConstraint, String, Object[]): PrivateScope, Public, Static, HideBySig
    ByVal(Object, IResolveConstraint): PrivateScope, Public, Static, HideBySig
    ByVal(Object, IResolveConstraint, String): PrivateScope, Public, Static, HideBySig
    ByVal(Object, IResolveConstraint, String, Object[]): PrivateScope, Public, Static, HideBySig
    Throws(IResolveConstraint, TestDelegate, String, Object[]): PrivateScope, Public, Static, HideBySig
    Throws(IResolveConstraint, TestDelegate, String): PrivateScope, Public, Static, HideBySig
    Throws(IResolveConstraint, TestDelegate): PrivateScope, Public, Static, HideBySig
    Throws(Type, TestDelegate, String, Object[]): PrivateScope, Public, Static, HideBySig
    Throws(Type, TestDelegate, String): PrivateScope, Public, Static, HideBySig
    Throws(Type, TestDelegate): PrivateScope, Public, Static, HideBySig
    Throws(TestDelegate, String, Object[]): PrivateScope, Public, Static, HideBySig
    Throws(TestDelegate, String): PrivateScope, Public, Static, HideBySig
    Throws(TestDelegate): PrivateScope, Public, Static, HideBySig
    Catch(TestDelegate, String, Object[]): PrivateScope, Public, Static, HideBySig
    Catch(TestDelegate, String): PrivateScope, Public, Static, HideBySig
    Catch(TestDelegate): PrivateScope, Public, Static, HideBySig
    Catch(Type, TestDelegate, String, Object[]): PrivateScope, Public, Static, HideBySig
    Catch(Type, TestDelegate, String): PrivateScope, Public, Static, HideBySig
    Catch(Type, TestDelegate): PrivateScope, Public, Static, HideBySig
    Catch(TestDelegate, String, Object[]): PrivateScope, Public, Static, HideBySig
    Catch(TestDelegate, String): PrivateScope, Public, Static, HideBySig
    Catch(TestDelegate): PrivateScope, Public, Static, HideBySig
    DoesNotThrow(TestDelegate, String, Object[]): PrivateScope, Public, Static, HideBySig
    DoesNotThrow(TestDelegate, String): PrivateScope, Public, Static, HideBySig
    DoesNotThrow(TestDelegate): PrivateScope, Public, Static, HideBySig
    True(Boolean, String, Object[]): PrivateScope, Public, Static, HideBySig
    True(Boolean, String): PrivateScope, Public, Static, HideBySig
    True(Boolean): PrivateScope, Public, Static, HideBySig
    IsTrue(Boolean, String, Object[]): PrivateScope, Public, Static, HideBySig
    IsTrue(Boolean, String): PrivateScope, Public, Static, HideBySig
    IsTrue(Boolean): PrivateScope, Public, Static, HideBySig
    False(Boolean, String, Object[]): PrivateScope, Public, Static, HideBySig
    False(Boolean, String): PrivateScope, Public, Static, HideBySig
    False(Boolean): PrivateScope, Public, Static, HideBySig
    IsFalse(Boolean, String, Object[]): PrivateScope, Public, Static, HideBySig
    IsFalse(Boolean, String): PrivateScope, Public, Static, HideBySig
    IsFalse(Boolean): PrivateScope, Public, Static, HideBySig
    NotNull(Object, String, Object[]): PrivateScope, Public, Static, HideBySig
    NotNull(Object, String): PrivateScope, Public, Static, HideBySig
    NotNull(Object): PrivateScope, Public, Static, HideBySig
    IsNotNull(Object, String, Object[]): PrivateScope, Public, Static, HideBySig
    IsNotNull(Object, String): PrivateScope, Public, Static, HideBySig
    IsNotNull(Object): PrivateScope, Public, Static, HideBySig
    Null(Object, String, Object[]): PrivateScope, Public, Static, HideBySig
    Null(Object, String): PrivateScope, Public, Static, HideBySig
    Null(Object): PrivateScope, Public, Static, HideBySig
    IsNull(Object, String, Object[]): PrivateScope, Public, Static, HideBySig
    IsNull(Object, String): PrivateScope, Public, Static, HideBySig
Class NUnit.Framework.Constraints.ConstraintFactory: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    NUnit.Framework.Constraints.ConstraintExpression Not 'get ' : 
    NUnit.Framework.Constraints.ConstraintExpression No 'get ' : 
    NUnit.Framework.Constraints.ConstraintExpression All 'get ' : 
    NUnit.Framework.Constraints.ConstraintExpression Some 'get ' : 
    NUnit.Framework.Constraints.ConstraintExpression None 'get ' : 
    NUnit.Framework.Constraints.ResolvableConstraintExpression Length 'get ' : 
    NUnit.Framework.Constraints.ResolvableConstraintExpression Count 'get ' : 
    NUnit.Framework.Constraints.ResolvableConstraintExpression Message 'get ' : 
    NUnit.Framework.Constraints.ResolvableConstraintExpression InnerException 'get ' : 
    NUnit.Framework.Constraints.NullConstraint Null 'get ' : 
    NUnit.Framework.Constraints.TrueConstraint True 'get ' : 
    NUnit.Framework.Constraints.FalseConstraint False 'get ' : 
    NUnit.Framework.Constraints.GreaterThanConstraint Positive 'get ' : 
    NUnit.Framework.Constraints.LessThanConstraint Negative 'get ' : 
    NUnit.Framework.Constraints.NaNConstraint NaN 'get ' : 
    NUnit.Framework.Constraints.EmptyConstraint Empty 'get ' : 
    NUnit.Framework.Constraints.UniqueItemsConstraint Unique 'get ' : 
    NUnit.Framework.Constraints.BinarySerializableConstraint BinarySerializable 'get ' : 
    NUnit.Framework.Constraints.XmlSerializableConstraint XmlSerializable 'get ' : 
    NUnit.Framework.Constraints.CollectionOrderedConstraint Ordered 'get ' : 
  Methods:
    get_Not(): PrivateScope, Public, HideBySig, SpecialName
    get_No(): PrivateScope, Public, HideBySig, SpecialName
    get_All(): PrivateScope, Public, HideBySig, SpecialName
    get_Some(): PrivateScope, Public, HideBySig, SpecialName
    get_None(): PrivateScope, Public, HideBySig, SpecialName
    Exactly(Int32): PrivateScope, Public, Static, HideBySig
    Property(String): PrivateScope, Public, HideBySig
    get_Length(): PrivateScope, Public, HideBySig, SpecialName
    get_Count(): PrivateScope, Public, HideBySig, SpecialName
    get_Message(): PrivateScope, Public, HideBySig, SpecialName
    get_InnerException(): PrivateScope, Public, HideBySig, SpecialName
    Attribute(Type): PrivateScope, Public, HideBySig
    Attribute(): PrivateScope, Public, HideBySig
    get_Null(): PrivateScope, Public, HideBySig, SpecialName
    get_True(): PrivateScope, Public, HideBySig, SpecialName
    get_False(): PrivateScope, Public, HideBySig, SpecialName
    get_Positive(): PrivateScope, Public, HideBySig, SpecialName
    get_Negative(): PrivateScope, Public, HideBySig, SpecialName
    get_NaN(): PrivateScope, Public, HideBySig, SpecialName
    get_Empty(): PrivateScope, Public, HideBySig, SpecialName
    get_Unique(): PrivateScope, Public, HideBySig, SpecialName
    get_BinarySerializable(): PrivateScope, Public, HideBySig, SpecialName
    get_XmlSerializable(): PrivateScope, Public, HideBySig, SpecialName
    EqualTo(Object): PrivateScope, Public, HideBySig
    SameAs(Object): PrivateScope, Public, HideBySig
    GreaterThan(Object): PrivateScope, Public, HideBySig
    GreaterThanOrEqualTo(Object): PrivateScope, Public, HideBySig
    AtLeast(Object): PrivateScope, Public, HideBySig
    LessThan(Object): PrivateScope, Public, HideBySig
    LessThanOrEqualTo(Object): PrivateScope, Public, HideBySig
    AtMost(Object): PrivateScope, Public, HideBySig
    TypeOf(Type): PrivateScope, Public, HideBySig
    TypeOf(): PrivateScope, Public, HideBySig
    InstanceOf(Type): PrivateScope, Public, HideBySig
    InstanceOf(): PrivateScope, Public, HideBySig
    AssignableFrom(Type): PrivateScope, Public, HideBySig
    AssignableFrom(): PrivateScope, Public, HideBySig
    AssignableTo(Type): PrivateScope, Public, HideBySig
    AssignableTo(): PrivateScope, Public, HideBySig
    EquivalentTo(IEnumerable): PrivateScope, Public, HideBySig
    SubsetOf(IEnumerable): PrivateScope, Public, HideBySig
    get_Ordered(): PrivateScope, Public, HideBySig, SpecialName
    Member(Object): PrivateScope, Public, HideBySig
    Contains(Object): PrivateScope, Public, HideBySig
    Contains(String): PrivateScope, Public, HideBySig
    StringContaining(String): PrivateScope, Public, HideBySig (Obsolete)
    ContainsSubstring(String): PrivateScope, Public, HideBySig (Obsolete)
    DoesNotContain(String): PrivateScope, Public, HideBySig (Obsolete)
    StartWith(String): PrivateScope, Public, HideBySig
    StartsWith(String): PrivateScope, Public, HideBySig
    StringStarting(String): PrivateScope, Public, HideBySig (Obsolete)
    DoesNotStartWith(String): PrivateScope, Public, HideBySig (Obsolete)
    EndWith(String): PrivateScope, Public, HideBySig
    EndsWith(String): PrivateScope, Public, HideBySig
    StringEnding(String): PrivateScope, Public, HideBySig (Obsolete)
    DoesNotEndWith(String): PrivateScope, Public, HideBySig (Obsolete)
    Match(String): PrivateScope, Public, HideBySig
    Matches(String): PrivateScope, Public, HideBySig
    StringMatching(String): PrivateScope, Public, HideBySig (Obsolete)
    DoesNotMatch(String): PrivateScope, Public, HideBySig (Obsolete)
    SamePath(String): PrivateScope, Public, HideBySig
    SubPathOf(String): PrivateScope, Public, HideBySig
    SamePathOrUnder(String): PrivateScope, Public, HideBySig
    InRange(IComparable, IComparable): PrivateScope, Public, HideBySig
Class NUnit.Framework.AssertionHelper: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :NUnit.Framework.Constraints.ConstraintFactory
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Expect(Boolean, String, Object[]): PrivateScope, Public, HideBySig
    Expect(Boolean, String): PrivateScope, Public, HideBySig
    Expect(Boolean): PrivateScope, Public, HideBySig
    Expect(ActualValueDelegate`1, IResolveConstraint): PrivateScope, Public, HideBySig
    Expect(ActualValueDelegate`1, IResolveConstraint, String): PrivateScope, Public, HideBySig
    Expect(ActualValueDelegate`1, IResolveConstraint, String, Object[]): PrivateScope, Public, HideBySig
    Expect(TestDelegate, IResolveConstraint): PrivateScope, Public, HideBySig
    Expect(TActual, IResolveConstraint): PrivateScope, Public, Static, HideBySig
    Expect(TActual, IResolveConstraint, String): PrivateScope, Public, Static, HideBySig
    Expect(TActual, IResolveConstraint, String, Object[]): PrivateScope, Public, Static, HideBySig
    Expect(TActual&, IResolveConstraint): PrivateScope, Public, Static, HideBySig
    Expect(TActual&, IResolveConstraint, String): PrivateScope, Public, Static, HideBySig
    Expect(TActual&, IResolveConstraint, String, Object[]): PrivateScope, Public, Static, HideBySig
    Map(ICollection): PrivateScope, Public, HideBySig
Class NUnit.Framework.Assume: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Equals(Object, Object): PrivateScope, Public, Static, HideBySig
    ReferenceEquals(Object, Object): PrivateScope, Public, Static, HideBySig
    That(ActualValueDelegate`1, IResolveConstraint): PrivateScope, Public, Static, HideBySig
    That(ActualValueDelegate`1, IResolveConstraint, String): PrivateScope, Public, Static, HideBySig
    That(ActualValueDelegate`1, IResolveConstraint, String, Object[]): PrivateScope, Public, Static, HideBySig
    That(Boolean, String, Object[]): PrivateScope, Public, Static, HideBySig
    That(Boolean, String): PrivateScope, Public, Static, HideBySig
    That(Boolean): PrivateScope, Public, Static, HideBySig
    That(TestDelegate, IResolveConstraint): PrivateScope, Public, Static, HideBySig
    That(TActual, IResolveConstraint): PrivateScope, Public, Static, HideBySig
    That(TActual, IResolveConstraint, String): PrivateScope, Public, Static, HideBySig
    That(TActual, IResolveConstraint, String, Object[]): PrivateScope, Public, Static, HideBySig
    That(TActual&, IResolveConstraint): PrivateScope, Public, Static, HideBySig
    That(TActual&, IResolveConstraint, String): PrivateScope, Public, Static, HideBySig
    That(TActual&, IResolveConstraint, String, Object[]): PrivateScope, Public, Static, HideBySig
Class NUnit.Framework.CategoryAttribute: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :NUnit.Framework.NUnitAttribute
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    NUnit.Framework.Internal.IApplyToTest
  Properties:
    System.String Name 'get ' : 
  Methods:
    get_Name(): PrivateScope, Public, HideBySig, SpecialName
    ApplyToTest(Test): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class NUnit.Framework.CombinatorialAttribute: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :NUnit.Framework.CombiningStrategyAttribute
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class NUnit.Framework.IncludeExcludeAttribute: AutoLayout, AnsiClass, Class, Public, Abstract, BeforeFieldInit
  :NUnit.Framework.NUnitAttribute
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.String Include 'get set' : 
    System.String Exclude 'get set' : 
    System.String Reason 'get set' : 
  Methods:
    get_Include(): PrivateScope, Public, HideBySig, SpecialName
    set_Include(String): PrivateScope, Public, HideBySig, SpecialName
    get_Exclude(): PrivateScope, Public, HideBySig, SpecialName
    set_Exclude(String): PrivateScope, Public, HideBySig, SpecialName
    get_Reason(): PrivateScope, Public, HideBySig, SpecialName
    set_Reason(String): PrivateScope, Public, HideBySig, SpecialName
Class NUnit.Framework.CultureAttribute: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :NUnit.Framework.IncludeExcludeAttribute
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    NUnit.Framework.Internal.IApplyToTest
  Methods:
    ApplyToTest(Test): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    IsCultureSupported(String): PrivateScope, Public, HideBySig
    IsCultureSupported(String[]): PrivateScope, Public, HideBySig
Class NUnit.Framework.DataAttribute: AutoLayout, AnsiClass, Class, Public, Abstract, BeforeFieldInit
  :NUnit.Framework.NUnitAttribute
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class NUnit.Framework.DatapointAttribute: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :NUnit.Framework.NUnitAttribute
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class NUnit.Framework.DatapointSourceAttribute: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :NUnit.Framework.NUnitAttribute
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class NUnit.Framework.DatapointsAttribute: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :NUnit.Framework.DatapointSourceAttribute
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class NUnit.Framework.DescriptionAttribute: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :NUnit.Framework.PropertyAttribute
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class NUnit.Framework.ExplicitAttribute: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :NUnit.Framework.NUnitAttribute
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    NUnit.Framework.Internal.IApplyToTest
  Methods:
    ApplyToTest(Test): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class NUnit.Framework.IgnoreAttribute: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :NUnit.Framework.NUnitAttribute
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    NUnit.Framework.Internal.IApplyToTest
  Properties:
    System.String Until 'get set' : 
  Methods:
    get_Until(): PrivateScope, Public, HideBySig, SpecialName
    set_Until(String): PrivateScope, Public, HideBySig, SpecialName
    ApplyToTest(Test): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Interface NUnit.Framework.Interfaces.ICommandDecorator: AutoLayout, AnsiClass, Class, Public, ClassSemanticsMask, Abstract
  Methods:
    Decorate(TestCommand): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Class NUnit.Framework.MaxTimeAttribute: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :NUnit.Framework.PropertyAttribute
    Void .ctor(Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    NUnit.Framework.Interfaces.ICommandDecorator
Class NUnit.Framework.PairwiseAttribute: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :NUnit.Framework.CombiningStrategyAttribute
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class NUnit.Framework.PlatformAttribute: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :NUnit.Framework.IncludeExcludeAttribute
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    NUnit.Framework.Internal.IApplyToTest
  Methods:
    ApplyToTest(Test): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class NUnit.Framework.ValuesAttribute: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :NUnit.Framework.DataAttribute
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Object): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Object, System.Object): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Object, System.Object, System.Object): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Object[]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    NUnit.Framework.Interfaces.IParameterDataSource
  Methods:
    GetData(ParameterInfo): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class NUnit.Framework.RandomAttribute: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :NUnit.Framework.ValuesAttribute
    Void .ctor(Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Double, Double, Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Int32, Int32, Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    GetData(ParameterInfo): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class NUnit.Framework.RangeAttribute: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :NUnit.Framework.ValuesAttribute
    Void .ctor(Int32, Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Int32, Int32, Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Int64, Int64, Int64): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Double, Double, Double): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Single, Single, Single): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class NUnit.Framework.RequiresMTAAttribute: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit (Obsolete)
  :NUnit.Framework.PropertyAttribute
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class NUnit.Framework.RequiresSTAAttribute: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit (Obsolete)
  :NUnit.Framework.PropertyAttribute
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class NUnit.Framework.RequiresThreadAttribute: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :NUnit.Framework.PropertyAttribute
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Threading.ApartmentState): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class NUnit.Framework.SequentialAttribute: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :NUnit.Framework.CombiningStrategyAttribute
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class NUnit.Framework.SetCultureAttribute: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :NUnit.Framework.PropertyAttribute
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    NUnit.Framework.Internal.IApplyToContext
Class NUnit.Framework.SetUICultureAttribute: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :NUnit.Framework.PropertyAttribute
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    NUnit.Framework.Internal.IApplyToContext
Class NUnit.Framework.SetUpAttribute: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :NUnit.Framework.NUnitAttribute
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class NUnit.Framework.PreTestAttribute: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :NUnit.Framework.NUnitAttribute
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class NUnit.Framework.PostTestAttribute: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :NUnit.Framework.NUnitAttribute
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class NUnit.Framework.SetUpFixtureAttribute: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :NUnit.Framework.FixtureBuilderAttribute
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    NUnit.Framework.Interfaces.IFixtureBuilder
  Methods:
    BuildFrom(Type): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class NUnit.Framework.TearDownAttribute: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :NUnit.Framework.NUnitAttribute
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class NUnit.Framework.TestAttribute: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :NUnit.Framework.TestCaseBuilderAttribute
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    NUnit.Framework.Interfaces.ISimpleTestBuilder
    NUnit.Framework.Internal.IApplyToTest
    NUnit.Framework.Interfaces.IImplyFixture
  Properties:
    System.String Description 'get set' : 
    System.String Author 'get set' : 
    System.Type TestOf 'get set' : 
    System.Object ExpectedResult 'get set' : 
    Boolean HasExpectedResult 'get set' : 
  Methods:
    get_Description(): PrivateScope, Public, HideBySig, SpecialName
    set_Description(String): PrivateScope, Public, HideBySig, SpecialName
    get_Author(): PrivateScope, Public, HideBySig, SpecialName
    set_Author(String): PrivateScope, Public, HideBySig, SpecialName
    get_TestOf(): PrivateScope, Public, HideBySig, SpecialName
    set_TestOf(Type): PrivateScope, Public, HideBySig, SpecialName
    ApplyToTest(Test): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    get_ExpectedResult(): PrivateScope, Public, HideBySig, SpecialName
    set_ExpectedResult(Object): PrivateScope, Public, HideBySig, SpecialName
    get_HasExpectedResult(): PrivateScope, Public, HideBySig, SpecialName
    BuildFrom(MethodInfo, Test): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class NUnit.Framework.TestCaseAttribute: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :NUnit.Framework.TestCaseBuilderAttribute
    Void .ctor(System.Object[]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Object): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Object, System.Object): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Object, System.Object, System.Object): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    NUnit.Framework.Interfaces.ITestBuilder
    NUnit.Framework.Interfaces.ITestCaseData
    NUnit.Framework.Interfaces.IImplyFixture
  Properties:
    System.Object[] Arguments 'get set' : 
    System.Object ExpectedResult 'get set' : 
    Boolean HasExpectedResult 'get set' : 
    System.String Description 'get set' : 
    System.String Author 'get set' : 
    System.Type TestOf 'get set' : 
    System.String TestName 'get set' : 
    Boolean Ignore 'get set' : 
    Boolean Explicit 'get set' : 
    NUnit.Framework.Interfaces.RunState RunState 'get set' : 
    System.String Reason 'get set' : 
    System.String IgnoreReason 'get set' : 
    System.String Category 'get set' : 
    NUnit.Framework.Interfaces.IPropertyBag Properties 'get ' : 
  Methods:
    get_Arguments(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_ExpectedResult(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_ExpectedResult(Object): PrivateScope, Public, HideBySig, SpecialName
    get_HasExpectedResult(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Description(): PrivateScope, Public, HideBySig, SpecialName
    set_Description(String): PrivateScope, Public, HideBySig, SpecialName
    get_Author(): PrivateScope, Public, HideBySig, SpecialName
    set_Author(String): PrivateScope, Public, HideBySig, SpecialName
    get_TestOf(): PrivateScope, Public, HideBySig, SpecialName
    set_TestOf(Type): PrivateScope, Public, HideBySig, SpecialName
    get_TestName(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_TestName(String): PrivateScope, Public, HideBySig, SpecialName
    get_Ignore(): PrivateScope, Public, HideBySig, SpecialName
    set_Ignore(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_Explicit(): PrivateScope, Public, HideBySig, SpecialName
    set_Explicit(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_RunState(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Reason(): PrivateScope, Public, HideBySig, SpecialName
    set_Reason(String): PrivateScope, Public, HideBySig, SpecialName
    get_IgnoreReason(): PrivateScope, Public, HideBySig, SpecialName
    set_IgnoreReason(String): PrivateScope, Public, HideBySig, SpecialName
    get_Category(): PrivateScope, Public, HideBySig, SpecialName
    set_Category(String): PrivateScope, Public, HideBySig, SpecialName
    get_Properties(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    BuildFrom(MethodInfo, Test): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class NUnit.Framework.TestCaseSourceAttribute: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :NUnit.Framework.TestCaseBuilderAttribute
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Type, System.String, System.Object[]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Type): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    NUnit.Framework.Interfaces.ITestBuilder
    NUnit.Framework.Interfaces.IImplyFixture
  Properties:
    System.String SourceName 'get set' : 
    System.Type SourceType 'get set' : 
    System.String Category 'get set' : 
  Methods:
    get_SourceName(): PrivateScope, Public, HideBySig, SpecialName
    get_SourceType(): PrivateScope, Public, HideBySig, SpecialName
    get_Category(): PrivateScope, Public, HideBySig, SpecialName
    set_Category(String): PrivateScope, Public, HideBySig, SpecialName
    GetTestCasesFor(MethodInfo): PrivateScope, Public, HideBySig
    BuildFrom(MethodInfo, Test): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class NUnit.Framework.TestFixtureAttribute: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :NUnit.Framework.FixtureBuilderAttribute
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Object[]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    NUnit.Framework.Interfaces.IFixtureBuilder
    NUnit.Framework.Internal.IApplyToTest
  Properties:
    System.String Description 'get set' : 
    System.String Author 'get set' : 
    System.Type TestOf 'get set' : 
    System.Object[] Arguments 'get set' : 
    Boolean Ignore 'get set' : 
    System.String IgnoreReason 'get set' : 
    System.Type[] TypeArgs 'get set' : 
    System.String Category 'get set' : 
    System.Collections.IList Categories 'get ' : 
  Methods:
    get_Description(): PrivateScope, Public, HideBySig, SpecialName
    set_Description(String): PrivateScope, Public, HideBySig, SpecialName
    get_Author(): PrivateScope, Public, HideBySig, SpecialName
    set_Author(String): PrivateScope, Public, HideBySig, SpecialName
    get_TestOf(): PrivateScope, Public, HideBySig, SpecialName
    set_TestOf(Type): PrivateScope, Public, HideBySig, SpecialName
    get_Arguments(): PrivateScope, Public, HideBySig, SpecialName
    get_Ignore(): PrivateScope, Public, HideBySig, SpecialName
    set_Ignore(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_IgnoreReason(): PrivateScope, Public, HideBySig, SpecialName
    set_IgnoreReason(String): PrivateScope, Public, HideBySig, SpecialName
    get_TypeArgs(): PrivateScope, Public, HideBySig, SpecialName
    set_TypeArgs(Type[]): PrivateScope, Public, HideBySig, SpecialName
    get_Category(): PrivateScope, Public, HideBySig, SpecialName
    set_Category(String): PrivateScope, Public, HideBySig, SpecialName
    get_Categories(): PrivateScope, Public, HideBySig, SpecialName
    ApplyToTest(Test): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    BuildFrom(Type): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class NUnit.Framework.TestFixtureSetUpAttribute: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit (Obsolete)
  :NUnit.Framework.OneTimeSetUpAttribute
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class NUnit.Framework.TestFixtureTearDownAttribute: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit (Obsolete)
  :NUnit.Framework.OneTimeTearDownAttribute
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class NUnit.Framework.TheoryAttribute: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :NUnit.Framework.TestCaseBuilderAttribute
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    NUnit.Framework.Interfaces.ITestBuilder
    NUnit.Framework.Interfaces.IImplyFixture
  Methods:
    BuildFrom(MethodInfo, Test): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class NUnit.Framework.TimeoutAttribute: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :NUnit.Framework.PropertyAttribute
    Void .ctor(Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    NUnit.Framework.Internal.IApplyToContext
Class NUnit.Framework.ValueSourceAttribute: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :NUnit.Framework.DataAttribute
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Type, System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    NUnit.Framework.Interfaces.IParameterDataSource
  Properties:
    System.String SourceName 'get ' : 
    System.Type SourceType 'get ' : 
  Methods:
    get_SourceName(): PrivateScope, Public, HideBySig, SpecialName
    get_SourceType(): PrivateScope, Public, HideBySig, SpecialName
    GetData(ParameterInfo): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class NUnit.Framework.CollectionAssert: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Equals(Object, Object): PrivateScope, Public, Static, HideBySig
    ReferenceEquals(Object, Object): PrivateScope, Public, Static, HideBySig
    AllItemsAreInstancesOfType(IEnumerable, Type): PrivateScope, Public, Static, HideBySig
    AllItemsAreInstancesOfType(IEnumerable, Type, String): PrivateScope, Public, Static, HideBySig
    AllItemsAreInstancesOfType(IEnumerable, Type, String, Object[]): PrivateScope, Public, Static, HideBySig
    AllItemsAreNotNull(IEnumerable): PrivateScope, Public, Static, HideBySig
    AllItemsAreNotNull(IEnumerable, String): PrivateScope, Public, Static, HideBySig
    AllItemsAreNotNull(IEnumerable, String, Object[]): PrivateScope, Public, Static, HideBySig
    AllItemsAreUnique(IEnumerable): PrivateScope, Public, Static, HideBySig
    AllItemsAreUnique(IEnumerable, String): PrivateScope, Public, Static, HideBySig
    AllItemsAreUnique(IEnumerable, String, Object[]): PrivateScope, Public, Static, HideBySig
    AreEqual(IEnumerable, IEnumerable): PrivateScope, Public, Static, HideBySig
    AreEqual(IEnumerable, IEnumerable, IComparer): PrivateScope, Public, Static, HideBySig
    AreEqual(IEnumerable, IEnumerable, String): PrivateScope, Public, Static, HideBySig
    AreEqual(IEnumerable, IEnumerable, IComparer, String): PrivateScope, Public, Static, HideBySig
    AreEqual(IEnumerable, IEnumerable, String, Object[]): PrivateScope, Public, Static, HideBySig
    AreEqual(IEnumerable, IEnumerable, IComparer, String, Object[]): PrivateScope, Public, Static, HideBySig
    AreEquivalent(IEnumerable, IEnumerable): PrivateScope, Public, Static, HideBySig
    AreEquivalent(IEnumerable, IEnumerable, String): PrivateScope, Public, Static, HideBySig
    AreEquivalent(IEnumerable, IEnumerable, String, Object[]): PrivateScope, Public, Static, HideBySig
    AreNotEqual(IEnumerable, IEnumerable): PrivateScope, Public, Static, HideBySig
    AreNotEqual(IEnumerable, IEnumerable, IComparer): PrivateScope, Public, Static, HideBySig
    AreNotEqual(IEnumerable, IEnumerable, String): PrivateScope, Public, Static, HideBySig
    AreNotEqual(IEnumerable, IEnumerable, IComparer, String): PrivateScope, Public, Static, HideBySig
    AreNotEqual(IEnumerable, IEnumerable, String, Object[]): PrivateScope, Public, Static, HideBySig
    AreNotEqual(IEnumerable, IEnumerable, IComparer, String, Object[]): PrivateScope, Public, Static, HideBySig
    AreNotEquivalent(IEnumerable, IEnumerable): PrivateScope, Public, Static, HideBySig
    AreNotEquivalent(IEnumerable, IEnumerable, String): PrivateScope, Public, Static, HideBySig
    AreNotEquivalent(IEnumerable, IEnumerable, String, Object[]): PrivateScope, Public, Static, HideBySig
    Contains(IEnumerable, Object): PrivateScope, Public, Static, HideBySig
    Contains(IEnumerable, Object, String): PrivateScope, Public, Static, HideBySig
    Contains(IEnumerable, Object, String, Object[]): PrivateScope, Public, Static, HideBySig
    DoesNotContain(IEnumerable, Object): PrivateScope, Public, Static, HideBySig
    DoesNotContain(IEnumerable, Object, String): PrivateScope, Public, Static, HideBySig
    DoesNotContain(IEnumerable, Object, String, Object[]): PrivateScope, Public, Static, HideBySig
    IsNotSubsetOf(IEnumerable, IEnumerable): PrivateScope, Public, Static, HideBySig
    IsNotSubsetOf(IEnumerable, IEnumerable, String): PrivateScope, Public, Static, HideBySig
    IsNotSubsetOf(IEnumerable, IEnumerable, String, Object[]): PrivateScope, Public, Static, HideBySig
    IsSubsetOf(IEnumerable, IEnumerable): PrivateScope, Public, Static, HideBySig
    IsSubsetOf(IEnumerable, IEnumerable, String): PrivateScope, Public, Static, HideBySig
    IsSubsetOf(IEnumerable, IEnumerable, String, Object[]): PrivateScope, Public, Static, HideBySig
    IsEmpty(IEnumerable, String, Object[]): PrivateScope, Public, Static, HideBySig
    IsEmpty(IEnumerable, String): PrivateScope, Public, Static, HideBySig
    IsEmpty(IEnumerable): PrivateScope, Public, Static, HideBySig
    IsNotEmpty(IEnumerable, String, Object[]): PrivateScope, Public, Static, HideBySig
    IsNotEmpty(IEnumerable, String): PrivateScope, Public, Static, HideBySig
    IsNotEmpty(IEnumerable): PrivateScope, Public, Static, HideBySig
    IsOrdered(IEnumerable, String, Object[]): PrivateScope, Public, Static, HideBySig
    IsOrdered(IEnumerable, String): PrivateScope, Public, Static, HideBySig
    IsOrdered(IEnumerable): PrivateScope, Public, Static, HideBySig
    IsOrdered(IEnumerable, IComparer, String, Object[]): PrivateScope, Public, Static, HideBySig
    IsOrdered(IEnumerable, IComparer, String): PrivateScope, Public, Static, HideBySig
    IsOrdered(IEnumerable, IComparer): PrivateScope, Public, Static, HideBySig
Class NUnit.Framework.Constraints.PrefixConstraint: AutoLayout, AnsiClass, Class, Public, Abstract, BeforeFieldInit
  :NUnit.Framework.Constraints.Constraint
  Properties:
    System.String Description 'get ' : 
  Methods:
    get_Description(): PrivateScope, Public, Virtual, HideBySig, SpecialName
Class NUnit.Framework.Constraints.AllItemsConstraint: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :NUnit.Framework.Constraints.PrefixConstraint
    Void .ctor(NUnit.Framework.Constraints.IConstraint): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    ApplyTo(TActual): PrivateScope, Public, Virtual, HideBySig
Class NUnit.Framework.Constraints.BinaryConstraint: AutoLayout, AnsiClass, Class, Public, Abstract, BeforeFieldInit
  :NUnit.Framework.Constraints.Constraint
Class NUnit.Framework.Constraints.AndConstraint: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :NUnit.Framework.Constraints.BinaryConstraint
    Void .ctor(NUnit.Framework.Constraints.IConstraint, NUnit.Framework.Constraints.IConstraint): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.String Description 'get ' : 
  Methods:
    get_Description(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    ApplyTo(TActual): PrivateScope, Public, Virtual, HideBySig
Class NUnit.Framework.Constraints.TypeConstraint: AutoLayout, AnsiClass, Class, Public, Abstract, BeforeFieldInit
  :NUnit.Framework.Constraints.Constraint
  Methods:
    ApplyTo(TActual): PrivateScope, Public, Virtual, HideBySig
Class NUnit.Framework.Constraints.AssignableFromConstraint: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :NUnit.Framework.Constraints.TypeConstraint
    Void .ctor(System.Type): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class NUnit.Framework.Constraints.AssignableToConstraint: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :NUnit.Framework.Constraints.TypeConstraint
    Void .ctor(System.Type): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class NUnit.Framework.Constraints.AttributeConstraint: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :NUnit.Framework.Constraints.PrefixConstraint
    Void .ctor(System.Type, NUnit.Framework.Constraints.IConstraint): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    ApplyTo(TActual): PrivateScope, Public, Virtual, HideBySig
Class NUnit.Framework.Constraints.AttributeExistsConstraint: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :NUnit.Framework.Constraints.Constraint
    Void .ctor(System.Type): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.String Description 'get ' : 
  Methods:
    get_Description(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    ApplyTo(TActual): PrivateScope, Public, Virtual, HideBySig
Class NUnit.Framework.Constraints.BinarySerializableConstraint: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :NUnit.Framework.Constraints.Constraint
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.String Description 'get ' : 
  Methods:
    get_Description(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    ApplyTo(TActual): PrivateScope, Public, Virtual, HideBySig
Class NUnit.Framework.Constraints.CollectionConstraint: AutoLayout, AnsiClass, Class, Public, Abstract, BeforeFieldInit
  :NUnit.Framework.Constraints.Constraint
  Methods:
    ApplyTo(TActual): PrivateScope, Public, Virtual, HideBySig
Class NUnit.Framework.Constraints.CollectionItemsEqualConstraint: AutoLayout, AnsiClass, Class, Public, Abstract, BeforeFieldInit
  :NUnit.Framework.Constraints.CollectionConstraint
  Properties:
    NUnit.Framework.Constraints.CollectionItemsEqualConstraint IgnoreCase 'get ' : 
  Methods:
    get_IgnoreCase(): PrivateScope, Public, HideBySig, SpecialName
    Using(IComparer): PrivateScope, Public, HideBySig
    Using(IComparer`1): PrivateScope, Public, HideBySig
    Using(Comparison`1): PrivateScope, Public, HideBySig
    Using(IEqualityComparer): PrivateScope, Public, HideBySig
    Using(IEqualityComparer`1): PrivateScope, Public, HideBySig
Class NUnit.Framework.Constraints.CollectionContainsConstraint: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :NUnit.Framework.Constraints.CollectionItemsEqualConstraint
    Void .ctor(System.Object): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.String Description 'get ' : 
  Methods:
    get_Description(): PrivateScope, Public, Virtual, HideBySig, SpecialName
Class NUnit.Framework.Constraints.CollectionEquivalentConstraint: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :NUnit.Framework.Constraints.CollectionItemsEqualConstraint
    Void .ctor(System.Collections.IEnumerable): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.String Description 'get ' : 
  Methods:
    get_Description(): PrivateScope, Public, Virtual, HideBySig, SpecialName
Class NUnit.Framework.Constraints.CollectionOrderedConstraint: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :NUnit.Framework.Constraints.CollectionConstraint
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    NUnit.Framework.Constraints.CollectionOrderedConstraint Descending 'get ' : 
    System.String Description 'get ' : 
  Methods:
    get_Descending(): PrivateScope, Public, HideBySig, SpecialName
    Using(IComparer): PrivateScope, Public, HideBySig
    Using(IComparer`1): PrivateScope, Public, HideBySig
    Using(Comparison`1): PrivateScope, Public, HideBySig
    By(String): PrivateScope, Public, HideBySig
    get_Description(): PrivateScope, Public, Virtual, HideBySig, SpecialName
Class NUnit.Framework.Constraints.CollectionSubsetConstraint: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :NUnit.Framework.Constraints.CollectionItemsEqualConstraint
    Void .ctor(System.Collections.IEnumerable): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.String Description 'get ' : 
  Methods:
    get_Description(): PrivateScope, Public, Virtual, HideBySig, SpecialName
Class NUnit.Framework.Constraints.CollectionTally: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(NUnit.Framework.Constraints.NUnitEqualityComparer, System.Collections.IEnumerable): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Int32 Count 'get ' : 
  Methods:
    get_Count(): PrivateScope, Public, HideBySig, SpecialName
    TryRemove(Object): PrivateScope, Public, HideBySig
    TryRemove(IEnumerable): PrivateScope, Public, HideBySig
Class NUnit.Framework.Constraints.ComparisonAdapter: AutoLayout, AnsiClass, Class, Public, Abstract, BeforeFieldInit
  Properties:
    NUnit.Framework.Constraints.ComparisonAdapter Default 'get ' : 
  Methods:
    get_Default(): PrivateScope, Public, Static, HideBySig, SpecialName
    For(IComparer): PrivateScope, Public, Static, HideBySig
    For(IComparer`1): PrivateScope, Public, Static, HideBySig
    For(Comparison`1): PrivateScope, Public, Static, HideBySig
    Compare(Object, Object): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Class NUnit.Framework.Constraints.ComparisonConstraint: AutoLayout, AnsiClass, Class, Public, Abstract, BeforeFieldInit
  :NUnit.Framework.Constraints.Constraint
  Methods:
    ApplyTo(TActual): PrivateScope, Public, Virtual, HideBySig
    Using(IComparer): PrivateScope, Public, HideBySig
    Using(IComparer`1): PrivateScope, Public, HideBySig
    Using(Comparison`1): PrivateScope, Public, HideBySig
Class NUnit.Framework.Constraints.ActualValueDelegate`1[TActual]: AutoLayout, AnsiClass, Class, Public, Sealed
  Type parameter: TActual
  :System.MulticastDelegate
    Void .ctor(System.Object, IntPtr): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Invoke(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    BeginInvoke(AsyncCallback, Object): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    EndInvoke(IAsyncResult): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class NUnit.Framework.Constraints.ConstraintBuilder: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    NUnit.Framework.Constraints.IResolveConstraint
  Methods:
    Append(ConstraintOperator): PrivateScope, Public, HideBySig
    Append(Constraint): PrivateScope, Public, HideBySig
    Resolve(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class NUnit.Framework.Constraints.ConstraintBuilder+OperatorStack: AutoLayout, AnsiClass, Class, NestedPublic, BeforeFieldInit
    Void .ctor(NUnit.Framework.Constraints.ConstraintBuilder): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Boolean Empty 'get ' : 
    NUnit.Framework.Constraints.ConstraintOperator Top 'get ' : 
  Methods:
    get_Empty(): PrivateScope, Public, HideBySig, SpecialName
    get_Top(): PrivateScope, Public, HideBySig, SpecialName
    Push(ConstraintOperator): PrivateScope, Public, HideBySig
    Pop(): PrivateScope, Public, HideBySig
Class NUnit.Framework.Constraints.ConstraintBuilder+ConstraintStack: AutoLayout, AnsiClass, Class, NestedPublic, BeforeFieldInit
    Void .ctor(NUnit.Framework.Constraints.ConstraintBuilder): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Boolean Empty 'get ' : 
  Methods:
    get_Empty(): PrivateScope, Public, HideBySig, SpecialName
    Push(IConstraint): PrivateScope, Public, HideBySig
    Pop(): PrivateScope, Public, HideBySig
Class NUnit.Framework.Constraints.ConstraintExpression: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(NUnit.Framework.Constraints.ConstraintBuilder): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    NUnit.Framework.Constraints.ConstraintExpression Not 'get ' : 
    NUnit.Framework.Constraints.ConstraintExpression No 'get ' : 
    NUnit.Framework.Constraints.ConstraintExpression All 'get ' : 
    NUnit.Framework.Constraints.ConstraintExpression Some 'get ' : 
    NUnit.Framework.Constraints.ConstraintExpression None 'get ' : 
    NUnit.Framework.Constraints.ResolvableConstraintExpression Length 'get ' : 
    NUnit.Framework.Constraints.ResolvableConstraintExpression Count 'get ' : 
    NUnit.Framework.Constraints.ResolvableConstraintExpression Message 'get ' : 
    NUnit.Framework.Constraints.ResolvableConstraintExpression InnerException 'get ' : 
    NUnit.Framework.Constraints.ConstraintExpression With 'get ' : 
    NUnit.Framework.Constraints.NullConstraint Null 'get ' : 
    NUnit.Framework.Constraints.TrueConstraint True 'get ' : 
    NUnit.Framework.Constraints.FalseConstraint False 'get ' : 
    NUnit.Framework.Constraints.GreaterThanConstraint Positive 'get ' : 
    NUnit.Framework.Constraints.LessThanConstraint Negative 'get ' : 
    NUnit.Framework.Constraints.NaNConstraint NaN 'get ' : 
    NUnit.Framework.Constraints.EmptyConstraint Empty 'get ' : 
    NUnit.Framework.Constraints.UniqueItemsConstraint Unique 'get ' : 
    NUnit.Framework.Constraints.BinarySerializableConstraint BinarySerializable 'get ' : 
    NUnit.Framework.Constraints.XmlSerializableConstraint XmlSerializable 'get ' : 
    NUnit.Framework.Constraints.CollectionOrderedConstraint Ordered 'get ' : 
    NUnit.Framework.Constraints.Constraint Exist 'get ' : 
  Methods:
    ToString(): PrivateScope, Public, Virtual, HideBySig
    Append(ConstraintOperator): PrivateScope, Public, HideBySig
    Append(SelfResolvingOperator): PrivateScope, Public, HideBySig
    Append(Constraint): PrivateScope, Public, HideBySig
    get_Not(): PrivateScope, Public, HideBySig, SpecialName
    get_No(): PrivateScope, Public, HideBySig, SpecialName
    get_All(): PrivateScope, Public, HideBySig, SpecialName
    get_Some(): PrivateScope, Public, HideBySig, SpecialName
    get_None(): PrivateScope, Public, HideBySig, SpecialName
    Exactly(Int32): PrivateScope, Public, HideBySig
    Property(String): PrivateScope, Public, HideBySig
    get_Length(): PrivateScope, Public, HideBySig, SpecialName
    get_Count(): PrivateScope, Public, HideBySig, SpecialName
    get_Message(): PrivateScope, Public, HideBySig, SpecialName
    get_InnerException(): PrivateScope, Public, HideBySig, SpecialName
    Attribute(Type): PrivateScope, Public, HideBySig
    Attribute(): PrivateScope, Public, HideBySig
    get_With(): PrivateScope, Public, HideBySig, SpecialName
    Matches(IResolveConstraint): PrivateScope, Public, HideBySig
    Matches(Predicate`1): PrivateScope, Public, HideBySig
    get_Null(): PrivateScope, Public, HideBySig, SpecialName
    get_True(): PrivateScope, Public, HideBySig, SpecialName
    get_False(): PrivateScope, Public, HideBySig, SpecialName
    get_Positive(): PrivateScope, Public, HideBySig, SpecialName
    get_Negative(): PrivateScope, Public, HideBySig, SpecialName
    get_NaN(): PrivateScope, Public, HideBySig, SpecialName
    get_Empty(): PrivateScope, Public, HideBySig, SpecialName
    get_Unique(): PrivateScope, Public, HideBySig, SpecialName
    get_BinarySerializable(): PrivateScope, Public, HideBySig, SpecialName
    get_XmlSerializable(): PrivateScope, Public, HideBySig, SpecialName
    EqualTo(Object): PrivateScope, Public, HideBySig
    SameAs(Object): PrivateScope, Public, HideBySig
    GreaterThan(Object): PrivateScope, Public, HideBySig
    GreaterThanOrEqualTo(Object): PrivateScope, Public, HideBySig
    AtLeast(Object): PrivateScope, Public, HideBySig
    LessThan(Object): PrivateScope, Public, HideBySig
    LessThanOrEqualTo(Object): PrivateScope, Public, HideBySig
    AtMost(Object): PrivateScope, Public, HideBySig
    TypeOf(Type): PrivateScope, Public, HideBySig
    TypeOf(): PrivateScope, Public, HideBySig
    InstanceOf(Type): PrivateScope, Public, HideBySig
    InstanceOf(): PrivateScope, Public, HideBySig
    AssignableFrom(Type): PrivateScope, Public, HideBySig
    AssignableFrom(): PrivateScope, Public, HideBySig
    AssignableTo(Type): PrivateScope, Public, HideBySig
    AssignableTo(): PrivateScope, Public, HideBySig
    EquivalentTo(IEnumerable): PrivateScope, Public, HideBySig
    SubsetOf(IEnumerable): PrivateScope, Public, HideBySig
    get_Ordered(): PrivateScope, Public, HideBySig, SpecialName
    Member(Object): PrivateScope, Public, HideBySig
    Contains(Object): PrivateScope, Public, HideBySig
    Contains(String): PrivateScope, Public, HideBySig
    Contain(String): PrivateScope, Public, HideBySig
    StringContaining(String): PrivateScope, Public, HideBySig (Obsolete)
    ContainsSubstring(String): PrivateScope, Public, HideBySig (Obsolete)
    StartWith(String): PrivateScope, Public, HideBySig
    StartsWith(String): PrivateScope, Public, HideBySig
    StringStarting(String): PrivateScope, Public, HideBySig (Obsolete)
    EndWith(String): PrivateScope, Public, HideBySig
    EndsWith(String): PrivateScope, Public, HideBySig
    StringEnding(String): PrivateScope, Public, HideBySig (Obsolete)
    Match(String): PrivateScope, Public, HideBySig
    Matches(String): PrivateScope, Public, HideBySig
    StringMatching(String): PrivateScope, Public, HideBySig (Obsolete)
    SamePath(String): PrivateScope, Public, HideBySig
    SubPathOf(String): PrivateScope, Public, HideBySig
    SamePathOrUnder(String): PrivateScope, Public, HideBySig
    InRange(IComparable, IComparable): PrivateScope, Public, HideBySig
    get_Exist(): PrivateScope, Public, HideBySig, SpecialName
Class NUnit.Framework.Constraints.ContainsConstraint: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :NUnit.Framework.Constraints.Constraint
    Void .ctor(System.Object): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.String Description 'get ' : 
    NUnit.Framework.Constraints.ContainsConstraint IgnoreCase 'get ' : 
  Methods:
    get_Description(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_IgnoreCase(): PrivateScope, Public, HideBySig, SpecialName
    ApplyTo(TActual): PrivateScope, Public, Virtual, HideBySig
Class NUnit.Framework.Constraints.DelayedConstraint: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :NUnit.Framework.Constraints.PrefixConstraint
    Void .ctor(NUnit.Framework.Constraints.IConstraint, Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(NUnit.Framework.Constraints.IConstraint, Int32, Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.String Description 'get ' : 
  Methods:
    get_Description(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    ApplyTo(TActual): PrivateScope, Public, Virtual, HideBySig
    ApplyTo(ActualValueDelegate`1): PrivateScope, Public, Virtual, HideBySig
    ApplyTo(TActual&): PrivateScope, Public, Virtual, HideBySig
Class NUnit.Framework.Constraints.EmptyCollectionConstraint: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :NUnit.Framework.Constraints.CollectionConstraint
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.String Description 'get ' : 
  Methods:
    get_Description(): PrivateScope, Public, Virtual, HideBySig, SpecialName
Class NUnit.Framework.Constraints.EmptyConstraint: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :NUnit.Framework.Constraints.Constraint
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.String Description 'get ' : 
  Methods:
    get_Description(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    ApplyTo(TActual): PrivateScope, Public, Virtual, HideBySig
Class NUnit.Framework.Constraints.EmptyDirectoryConstraint: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :NUnit.Framework.Constraints.Constraint
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.String Description 'get ' : 
  Methods:
    get_Description(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    ApplyTo(TActual): PrivateScope, Public, Virtual, HideBySig
Class NUnit.Framework.Constraints.EmptyStringConstraint: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :NUnit.Framework.Constraints.StringConstraint
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.String Description 'get ' : 
  Methods:
    get_Description(): PrivateScope, Public, Virtual, HideBySig, SpecialName
Class NUnit.Framework.Constraints.EndsWithConstraint: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :NUnit.Framework.Constraints.StringConstraint
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class NUnit.Framework.Constraints.EqualConstraint: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :NUnit.Framework.Constraints.Constraint
    Void .ctor(System.Object): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    NUnit.Framework.Constraints.Tolerance Tolerance 'get ' : 
    Boolean CaseInsensitive 'get ' : 
    Boolean ClipStrings 'get set' : 
    System.Collections.Generic.IList`1[NUnit.Framework.Constraints.NUnitEqualityComparer+FailurePoint] FailurePoints 'get ' : 
    NUnit.Framework.Constraints.EqualConstraint IgnoreCase 'get ' : 
    NUnit.Framework.Constraints.EqualConstraint NoClip 'get ' : 
    NUnit.Framework.Constraints.EqualConstraint AsCollection 'get ' : 
    NUnit.Framework.Constraints.EqualConstraint Ulps 'get ' : 
    NUnit.Framework.Constraints.EqualConstraint Percent 'get ' : 
    NUnit.Framework.Constraints.EqualConstraint Days 'get ' : 
    NUnit.Framework.Constraints.EqualConstraint Hours 'get ' : 
    NUnit.Framework.Constraints.EqualConstraint Minutes 'get ' : 
    NUnit.Framework.Constraints.EqualConstraint Seconds 'get ' : 
    NUnit.Framework.Constraints.EqualConstraint Milliseconds 'get ' : 
    NUnit.Framework.Constraints.EqualConstraint Ticks 'get ' : 
    System.String Description 'get ' : 
  Methods:
    get_Tolerance(): PrivateScope, Public, HideBySig, SpecialName
    get_CaseInsensitive(): PrivateScope, Public, HideBySig, SpecialName
    get_ClipStrings(): PrivateScope, Public, HideBySig, SpecialName
    get_FailurePoints(): PrivateScope, Public, HideBySig, SpecialName
    get_IgnoreCase(): PrivateScope, Public, HideBySig, SpecialName
    get_NoClip(): PrivateScope, Public, HideBySig, SpecialName
    get_AsCollection(): PrivateScope, Public, HideBySig, SpecialName
    Within(Object): PrivateScope, Public, HideBySig
    get_Ulps(): PrivateScope, Public, HideBySig, SpecialName
    get_Percent(): PrivateScope, Public, HideBySig, SpecialName
    get_Days(): PrivateScope, Public, HideBySig, SpecialName
    get_Hours(): PrivateScope, Public, HideBySig, SpecialName
    get_Minutes(): PrivateScope, Public, HideBySig, SpecialName
    get_Seconds(): PrivateScope, Public, HideBySig, SpecialName
    get_Milliseconds(): PrivateScope, Public, HideBySig, SpecialName
    get_Ticks(): PrivateScope, Public, HideBySig, SpecialName
    Using(IComparer): PrivateScope, Public, HideBySig
    Using(IComparer`1): PrivateScope, Public, HideBySig
    Using(Comparison`1): PrivateScope, Public, HideBySig
    Using(IEqualityComparer): PrivateScope, Public, HideBySig
    Using(IEqualityComparer`1): PrivateScope, Public, HideBySig
    ApplyTo(TActual): PrivateScope, Public, Virtual, HideBySig
    get_Description(): PrivateScope, Public, Virtual, HideBySig, SpecialName
Class NUnit.Framework.Constraints.EqualityAdapter: AutoLayout, AnsiClass, Class, Public, Abstract, BeforeFieldInit
  Methods:
    AreEqual(Object, Object): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    CanCompare(Object, Object): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    For(IComparer): PrivateScope, Public, Static, HideBySig
    For(IEqualityComparer): PrivateScope, Public, Static, HideBySig
    For(IEqualityComparer`1): PrivateScope, Public, Static, HideBySig
    For(IComparer`1): PrivateScope, Public, Static, HideBySig
    For(Comparison`1): PrivateScope, Public, Static, HideBySig
Class NUnit.Framework.Constraints.ExactTypeConstraint: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :NUnit.Framework.Constraints.TypeConstraint
    Void .ctor(System.Type): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class NUnit.Framework.Constraints.FalseConstraint: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :NUnit.Framework.Constraints.Constraint
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    ApplyTo(TActual): PrivateScope, Public, Virtual, HideBySig
Class NUnit.Framework.Constraints.FloatingPointNumerics: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  Methods:
    AreAlmostEqualUlps(Single, Single, Int32): PrivateScope, Public, Static, HideBySig
    AreAlmostEqualUlps(Double, Double, Int64): PrivateScope, Public, Static, HideBySig
    ReinterpretAsInt(Single): PrivateScope, Public, Static, HideBySig
    ReinterpretAsLong(Double): PrivateScope, Public, Static, HideBySig
    ReinterpretAsFloat(Int32): PrivateScope, Public, Static, HideBySig
    ReinterpretAsDouble(Int64): PrivateScope, Public, Static, HideBySig
Class NUnit.Framework.Constraints.GreaterThanConstraint: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :NUnit.Framework.Constraints.ComparisonConstraint
    Void .ctor(System.Object): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class NUnit.Framework.Constraints.GreaterThanOrEqualConstraint: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :NUnit.Framework.Constraints.ComparisonConstraint
    Void .ctor(System.Object): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Struct NUnit.Framework.Constraints.ConstraintStatus: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    NUnit.Framework.Constraints.ConstraintStatus Unknown = 0 : Public, Static, Literal, HasDefault
    NUnit.Framework.Constraints.ConstraintStatus Success = 1 : Public, Static, Literal, HasDefault
    NUnit.Framework.Constraints.ConstraintStatus Failure = 2 : Public, Static, Literal, HasDefault
    NUnit.Framework.Constraints.ConstraintStatus Error = 3 : Public, Static, Literal, HasDefault
Class NUnit.Framework.Constraints.InstanceOfTypeConstraint: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :NUnit.Framework.Constraints.TypeConstraint
    Void .ctor(System.Type): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class NUnit.Framework.Constraints.LessThanConstraint: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :NUnit.Framework.Constraints.ComparisonConstraint
    Void .ctor(System.Object): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class NUnit.Framework.Constraints.LessThanOrEqualConstraint: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :NUnit.Framework.Constraints.ComparisonConstraint
    Void .ctor(System.Object): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class NUnit.Framework.Constraints.MsgUtils: AutoLayout, AnsiClass, Class, Public, Abstract, Sealed, BeforeFieldInit
  Methods:
    FormatValue(Object): PrivateScope, Public, Static, HideBySig
    FormatCollection(IEnumerable, Int64, Int32): PrivateScope, Public, Static, HideBySig
    GetTypeRepresentation(Object): PrivateScope, Public, Static, HideBySig
    EscapeControlChars(String): PrivateScope, Public, Static, HideBySig
    GetArrayIndicesAsString(Int32[]): PrivateScope, Public, Static, HideBySig
    GetArrayIndicesFromCollectionIndex(IEnumerable, Int64): PrivateScope, Public, Static, HideBySig
    ClipString(String, Int32, Int32): PrivateScope, Public, Static, HideBySig
    ClipExpectedAndActual(String&, String&, Int32, Int32): PrivateScope, Public, Static, HideBySig
    FindMismatchPosition(String, String, Int32, Boolean): PrivateScope, Public, Static, HideBySig
Class NUnit.Framework.Constraints.NaNConstraint: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :NUnit.Framework.Constraints.Constraint
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.String Description 'get ' : 
  Methods:
    get_Description(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    ApplyTo(TActual): PrivateScope, Public, Virtual, HideBySig
Class NUnit.Framework.Constraints.NoItemConstraint: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :NUnit.Framework.Constraints.PrefixConstraint
    Void .ctor(NUnit.Framework.Constraints.IConstraint): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    ApplyTo(TActual): PrivateScope, Public, Virtual, HideBySig
Class NUnit.Framework.Constraints.NotConstraint: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :NUnit.Framework.Constraints.PrefixConstraint
    Void .ctor(NUnit.Framework.Constraints.IConstraint): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    ApplyTo(TActual): PrivateScope, Public, Virtual, HideBySig
Class NUnit.Framework.Constraints.NullConstraint: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :NUnit.Framework.Constraints.Constraint
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    ApplyTo(TActual): PrivateScope, Public, Virtual, HideBySig
Class NUnit.Framework.Constraints.Numerics: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  Methods:
    IsNumericType(Object): PrivateScope, Public, Static, HideBySig
    IsFloatingPointNumeric(Object): PrivateScope, Public, Static, HideBySig
    IsFixedPointNumeric(Object): PrivateScope, Public, Static, HideBySig
    AreEqual(Object, Object, Tolerance&): PrivateScope, Public, Static, HideBySig
    Compare(Object, Object): PrivateScope, Public, Static, HideBySig
Class NUnit.Framework.Constraints.NUnitComparer: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.Collections.IComparer
  Properties:
    NUnit.Framework.Constraints.NUnitComparer Default 'get ' : 
  Methods:
    get_Default(): PrivateScope, Public, Static, HideBySig, SpecialName
    Compare(Object, Object): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class NUnit.Framework.Constraints.NUnitEqualityComparer: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    NUnit.Framework.Constraints.NUnitEqualityComparer Default 'get ' : 
    Boolean IgnoreCase 'get set' : 
    Boolean CompareAsCollection 'get set' : 
    System.Collections.Generic.IList`1[NUnit.Framework.Constraints.EqualityAdapter] ExternalComparers 'get ' : 
    System.Collections.Generic.IList`1[NUnit.Framework.Constraints.NUnitEqualityComparer+FailurePoint] FailurePoints 'get ' : 
  Methods:
    get_Default(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_IgnoreCase(): PrivateScope, Public, HideBySig, SpecialName
    set_IgnoreCase(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_CompareAsCollection(): PrivateScope, Public, HideBySig, SpecialName
    set_CompareAsCollection(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_ExternalComparers(): PrivateScope, Public, HideBySig, SpecialName
    get_FailurePoints(): PrivateScope, Public, HideBySig, SpecialName
    AreEqual(Object, Object, Tolerance&): PrivateScope, Public, HideBySig
Class NUnit.Framework.Constraints.NUnitEqualityComparer+FailurePoint: AutoLayout, AnsiClass, Class, NestedPublic, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Int64 Position : Public
    System.Object ExpectedValue : Public
    System.Object ActualValue : Public
    Boolean ExpectedHasData : Public
    Boolean ActualHasData : Public
Class NUnit.Framework.Constraints.BinaryOperator: AutoLayout, AnsiClass, Class, Public, Abstract, BeforeFieldInit
  :NUnit.Framework.Constraints.ConstraintOperator
  Properties:
    Int32 LeftPrecedence 'get ' : 
    Int32 RightPrecedence 'get ' : 
  Methods:
    Reduce(ConstraintStack): PrivateScope, Public, Virtual, HideBySig
    get_LeftPrecedence(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_RightPrecedence(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    ApplyOperator(IConstraint, IConstraint): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Class NUnit.Framework.Constraints.AndOperator: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :NUnit.Framework.Constraints.BinaryOperator
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    ApplyOperator(IConstraint, IConstraint): PrivateScope, Public, Virtual, HideBySig
Class NUnit.Framework.Constraints.SelfResolvingOperator: AutoLayout, AnsiClass, Class, Public, Abstract, BeforeFieldInit
  :NUnit.Framework.Constraints.ConstraintOperator
Class NUnit.Framework.Constraints.AttributeOperator: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :NUnit.Framework.Constraints.SelfResolvingOperator
    Void .ctor(System.Type): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Reduce(ConstraintStack): PrivateScope, Public, Virtual, HideBySig
Class NUnit.Framework.Constraints.NotOperator: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :NUnit.Framework.Constraints.PrefixOperator
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    ApplyPrefix(IConstraint): PrivateScope, Public, Virtual, HideBySig
Class NUnit.Framework.Constraints.OrOperator: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :NUnit.Framework.Constraints.BinaryOperator
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    ApplyOperator(IConstraint, IConstraint): PrivateScope, Public, Virtual, HideBySig
Class NUnit.Framework.Constraints.PropOperator: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :NUnit.Framework.Constraints.SelfResolvingOperator
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.String Name 'get ' : 
  Methods:
    get_Name(): PrivateScope, Public, HideBySig, SpecialName
    Reduce(ConstraintStack): PrivateScope, Public, Virtual, HideBySig
Class NUnit.Framework.Constraints.ThrowsOperator: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :NUnit.Framework.Constraints.SelfResolvingOperator
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Reduce(ConstraintStack): PrivateScope, Public, Virtual, HideBySig
Class NUnit.Framework.Constraints.WithOperator: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :NUnit.Framework.Constraints.PrefixOperator
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    ApplyPrefix(IConstraint): PrivateScope, Public, Virtual, HideBySig
Class NUnit.Framework.Constraints.OrConstraint: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :NUnit.Framework.Constraints.BinaryConstraint
    Void .ctor(NUnit.Framework.Constraints.IConstraint, NUnit.Framework.Constraints.IConstraint): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.String Description 'get ' : 
  Methods:
    get_Description(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    ApplyTo(TActual): PrivateScope, Public, Virtual, HideBySig
Class NUnit.Framework.Constraints.PredicateConstraint`1[T]: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  Type parameter: T
  :NUnit.Framework.Constraints.Constraint
    Void .ctor(System.Predicate`1[T]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.String Description 'get ' : 
  Methods:
    get_Description(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    ApplyTo(TActual): PrivateScope, Public, Virtual, HideBySig
Class NUnit.Framework.Constraints.PropertyConstraint: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :NUnit.Framework.Constraints.PrefixConstraint
    Void .ctor(System.String, NUnit.Framework.Constraints.IConstraint): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    ApplyTo(TActual): PrivateScope, Public, Virtual, HideBySig
Class NUnit.Framework.Constraints.PropertyExistsConstraint: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :NUnit.Framework.Constraints.Constraint
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.String Description 'get ' : 
  Methods:
    get_Description(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    ApplyTo(TActual): PrivateScope, Public, Virtual, HideBySig
Class NUnit.Framework.Constraints.RangeConstraint: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :NUnit.Framework.Constraints.Constraint
    Void .ctor(System.IComparable, System.IComparable): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.String Description 'get ' : 
  Methods:
    get_Description(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    ApplyTo(TActual): PrivateScope, Public, Virtual, HideBySig
    Using(IComparer): PrivateScope, Public, HideBySig
    Using(IComparer`1): PrivateScope, Public, HideBySig
    Using(Comparison`1): PrivateScope, Public, HideBySig
Class NUnit.Framework.Constraints.RegexConstraint: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :NUnit.Framework.Constraints.StringConstraint
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class NUnit.Framework.Constraints.ResolvableConstraintExpression: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :NUnit.Framework.Constraints.ConstraintExpression
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(NUnit.Framework.Constraints.ConstraintBuilder): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    NUnit.Framework.Constraints.IResolveConstraint
  Properties:
    NUnit.Framework.Constraints.ConstraintExpression And 'get ' : 
    NUnit.Framework.Constraints.ConstraintExpression Or 'get ' : 
  Methods:
    get_And(): PrivateScope, Public, HideBySig, SpecialName
    get_Or(): PrivateScope, Public, HideBySig, SpecialName
Class NUnit.Framework.Constraints.ReusableConstraint: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(NUnit.Framework.Constraints.IResolveConstraint): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    NUnit.Framework.Constraints.IResolveConstraint
  Methods:
    op_Implicit(Constraint): PrivateScope, Public, Static, HideBySig, SpecialName
    ToString(): PrivateScope, Public, Virtual, HideBySig
    Resolve(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class NUnit.Framework.Constraints.SameAsConstraint: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :NUnit.Framework.Constraints.Constraint
    Void .ctor(System.Object): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.String Description 'get ' : 
  Methods:
    get_Description(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    ApplyTo(TActual): PrivateScope, Public, Virtual, HideBySig
Class NUnit.Framework.Constraints.SamePathConstraint: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :NUnit.Framework.Constraints.PathConstraint
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.String Description 'get ' : 
  Methods:
    get_Description(): PrivateScope, Public, Virtual, HideBySig, SpecialName
Class NUnit.Framework.Constraints.SamePathOrUnderConstraint: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :NUnit.Framework.Constraints.PathConstraint
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.String Description 'get ' : 
  Methods:
    get_Description(): PrivateScope, Public, Virtual, HideBySig, SpecialName
Class NUnit.Framework.Constraints.SomeItemsConstraint: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :NUnit.Framework.Constraints.PrefixConstraint
    Void .ctor(NUnit.Framework.Constraints.IConstraint): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    ApplyTo(TActual): PrivateScope, Public, Virtual, HideBySig
Class NUnit.Framework.Constraints.StartsWithConstraint: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :NUnit.Framework.Constraints.StringConstraint
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class NUnit.Framework.Constraints.SubstringConstraint: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :NUnit.Framework.Constraints.StringConstraint
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class NUnit.Framework.Constraints.ThrowsConstraint: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :NUnit.Framework.Constraints.PrefixConstraint
    Void .ctor(NUnit.Framework.Constraints.IConstraint): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.Exception ActualException 'get ' : 
    System.String Description 'get ' : 
  Methods:
    get_ActualException(): PrivateScope, Public, HideBySig, SpecialName
    get_Description(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    ApplyTo(TActual): PrivateScope, Public, Virtual, HideBySig
    ApplyTo(ActualValueDelegate`1): PrivateScope, Public, Virtual, HideBySig
Class NUnit.Framework.Constraints.ThrowsNothingConstraint: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :NUnit.Framework.Constraints.Constraint
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.String Description 'get ' : 
  Methods:
    get_Description(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    ApplyTo(TActual): PrivateScope, Public, Virtual, HideBySig
    ApplyTo(ActualValueDelegate`1): PrivateScope, Public, Virtual, HideBySig
Class NUnit.Framework.Constraints.Tolerance: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(System.Object): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    NUnit.Framework.Constraints.Tolerance Default 'get ' : 
    NUnit.Framework.Constraints.Tolerance Exact 'get ' : 
    NUnit.Framework.Constraints.ToleranceMode Mode 'get ' : 
    System.Object Value 'get ' : 
    NUnit.Framework.Constraints.Tolerance Percent 'get ' : 
    NUnit.Framework.Constraints.Tolerance Ulps 'get ' : 
    NUnit.Framework.Constraints.Tolerance Days 'get ' : 
    NUnit.Framework.Constraints.Tolerance Hours 'get ' : 
    NUnit.Framework.Constraints.Tolerance Minutes 'get ' : 
    NUnit.Framework.Constraints.Tolerance Seconds 'get ' : 
    NUnit.Framework.Constraints.Tolerance Milliseconds 'get ' : 
    NUnit.Framework.Constraints.Tolerance Ticks 'get ' : 
    Boolean IsUnsetOrDefault 'get ' : 
  Methods:
    get_Default(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Exact(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Mode(): PrivateScope, Public, HideBySig, SpecialName
    get_Value(): PrivateScope, Public, HideBySig, SpecialName
    get_Percent(): PrivateScope, Public, HideBySig, SpecialName
    get_Ulps(): PrivateScope, Public, HideBySig, SpecialName
    get_Days(): PrivateScope, Public, HideBySig, SpecialName
    get_Hours(): PrivateScope, Public, HideBySig, SpecialName
    get_Minutes(): PrivateScope, Public, HideBySig, SpecialName
    get_Seconds(): PrivateScope, Public, HideBySig, SpecialName
    get_Milliseconds(): PrivateScope, Public, HideBySig, SpecialName
    get_Ticks(): PrivateScope, Public, HideBySig, SpecialName
    get_IsUnsetOrDefault(): PrivateScope, Public, HideBySig, SpecialName
Struct NUnit.Framework.Constraints.ToleranceMode: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    NUnit.Framework.Constraints.ToleranceMode Unset = 0 : Public, Static, Literal, HasDefault
    NUnit.Framework.Constraints.ToleranceMode Linear = 1 : Public, Static, Literal, HasDefault
    NUnit.Framework.Constraints.ToleranceMode Percent = 2 : Public, Static, Literal, HasDefault
    NUnit.Framework.Constraints.ToleranceMode Ulps = 3 : Public, Static, Literal, HasDefault
Class NUnit.Framework.Constraints.TrueConstraint: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :NUnit.Framework.Constraints.Constraint
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    ApplyTo(TActual): PrivateScope, Public, Virtual, HideBySig
Class NUnit.Framework.Constraints.UniqueItemsConstraint: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :NUnit.Framework.Constraints.CollectionItemsEqualConstraint
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.String Description 'get ' : 
  Methods:
    get_Description(): PrivateScope, Public, Virtual, HideBySig, SpecialName
Class NUnit.Framework.Constraints.XmlSerializableConstraint: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :NUnit.Framework.Constraints.Constraint
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.String Description 'get ' : 
  Methods:
    get_Description(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    ApplyTo(TActual): PrivateScope, Public, Virtual, HideBySig
Class NUnit.Framework.Contains: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Item(Object): PrivateScope, Public, Static, HideBySig
    Substring(String): PrivateScope, Public, Static, HideBySig
Class NUnit.Env: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    System.String NewLine : Public, Static, InitOnly
    System.String DocumentFolder : Public, Static
    System.String DefaultWorkDirectory : Public, Static, InitOnly
Class NUnit.Framework.AssertionException: AutoLayout, AnsiClass, Class, Public, Serializable, BeforeFieldInit
  :NUnit.Framework.ResultStateException
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, System.Exception): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    NUnit.Framework.Interfaces.ResultState ResultState 'get ' : 
  Methods:
    get_ResultState(): PrivateScope, Public, Virtual, HideBySig, SpecialName
Class NUnit.Framework.IgnoreException: AutoLayout, AnsiClass, Class, Public, Serializable, BeforeFieldInit
  :NUnit.Framework.ResultStateException
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, System.Exception): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    NUnit.Framework.Interfaces.ResultState ResultState 'get ' : 
  Methods:
    get_ResultState(): PrivateScope, Public, Virtual, HideBySig, SpecialName
Class NUnit.Framework.InconclusiveException: AutoLayout, AnsiClass, Class, Public, Serializable, BeforeFieldInit
  :NUnit.Framework.ResultStateException
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, System.Exception): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    NUnit.Framework.Interfaces.ResultState ResultState 'get ' : 
  Methods:
    get_ResultState(): PrivateScope, Public, Virtual, HideBySig, SpecialName
Class NUnit.Framework.SuccessException: AutoLayout, AnsiClass, Class, Public, Serializable, BeforeFieldInit
  :NUnit.Framework.ResultStateException
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, System.Exception): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    NUnit.Framework.Interfaces.ResultState ResultState 'get ' : 
  Methods:
    get_ResultState(): PrivateScope, Public, Virtual, HideBySig, SpecialName
Interface NUnit.Framework.Interfaces.ITestCaseBuilder: AutoLayout, AnsiClass, Class, Public, ClassSemanticsMask, Abstract
  Methods:
    CanBuildFrom(MethodInfo, Test): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    BuildFrom(MethodInfo, Test): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Class NUnit.Framework.FileAssert: AutoLayout, AnsiClass, Class, Public, Abstract, Sealed, BeforeFieldInit
  Methods:
    Equals(Object, Object): PrivateScope, Public, Static, HideBySig
    ReferenceEquals(Object, Object): PrivateScope, Public, Static, HideBySig
    AreEqual(Stream, Stream, String, Object[]): PrivateScope, Public, Static, HideBySig
    AreEqual(Stream, Stream, String): PrivateScope, Public, Static, HideBySig
    AreEqual(Stream, Stream): PrivateScope, Public, Static, HideBySig
    AreEqual(FileInfo, FileInfo, String, Object[]): PrivateScope, Public, Static, HideBySig
    AreEqual(FileInfo, FileInfo, String): PrivateScope, Public, Static, HideBySig
    AreEqual(FileInfo, FileInfo): PrivateScope, Public, Static, HideBySig
    AreEqual(String, String, String, Object[]): PrivateScope, Public, Static, HideBySig
    AreEqual(String, String, String): PrivateScope, Public, Static, HideBySig
    AreEqual(String, String): PrivateScope, Public, Static, HideBySig
    AreNotEqual(Stream, Stream, String, Object[]): PrivateScope, Public, Static, HideBySig
    AreNotEqual(Stream, Stream, String): PrivateScope, Public, Static, HideBySig
    AreNotEqual(Stream, Stream): PrivateScope, Public, Static, HideBySig
    AreNotEqual(FileInfo, FileInfo, String, Object[]): PrivateScope, Public, Static, HideBySig
    AreNotEqual(FileInfo, FileInfo, String): PrivateScope, Public, Static, HideBySig
    AreNotEqual(FileInfo, FileInfo): PrivateScope, Public, Static, HideBySig
    AreNotEqual(String, String, String, Object[]): PrivateScope, Public, Static, HideBySig
    AreNotEqual(String, String, String): PrivateScope, Public, Static, HideBySig
    AreNotEqual(String, String): PrivateScope, Public, Static, HideBySig
    Exists(FileInfo, String, Object[]): PrivateScope, Public, Static, HideBySig
    Exists(FileInfo, String): PrivateScope, Public, Static, HideBySig
    Exists(FileInfo): PrivateScope, Public, Static, HideBySig
    Exists(String, String, Object[]): PrivateScope, Public, Static, HideBySig
    Exists(String, String): PrivateScope, Public, Static, HideBySig
    Exists(String): PrivateScope, Public, Static, HideBySig
    DoesNotExist(FileInfo, String, Object[]): PrivateScope, Public, Static, HideBySig
    DoesNotExist(FileInfo, String): PrivateScope, Public, Static, HideBySig
    DoesNotExist(FileInfo): PrivateScope, Public, Static, HideBySig
    DoesNotExist(String, String, Object[]): PrivateScope, Public, Static, HideBySig
    DoesNotExist(String, String): PrivateScope, Public, Static, HideBySig
    DoesNotExist(String): PrivateScope, Public, Static, HideBySig
Class NUnit.Framework.GlobalSettings: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Double DefaultFloatingPointTolerance : Public, Static
Class NUnit.Framework.Has: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    NUnit.Framework.Constraints.ConstraintExpression No 'get ' : 
    NUnit.Framework.Constraints.ConstraintExpression All 'get ' : 
    NUnit.Framework.Constraints.ConstraintExpression Some 'get ' : 
    NUnit.Framework.Constraints.ConstraintExpression None 'get ' : 
    NUnit.Framework.Constraints.ResolvableConstraintExpression Length 'get ' : 
    NUnit.Framework.Constraints.ResolvableConstraintExpression Count 'get ' : 
    NUnit.Framework.Constraints.ResolvableConstraintExpression Message 'get ' : 
    NUnit.Framework.Constraints.ResolvableConstraintExpression InnerException 'get ' : 
  Methods:
    get_No(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_All(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Some(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_None(): PrivateScope, Public, Static, HideBySig, SpecialName
    Exactly(Int32): PrivateScope, Public, Static, HideBySig
    Property(String): PrivateScope, Public, Static, HideBySig
    get_Length(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Count(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Message(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_InnerException(): PrivateScope, Public, Static, HideBySig, SpecialName
    Attribute(Type): PrivateScope, Public, Static, HideBySig
    Attribute(): PrivateScope, Public, Static, HideBySig
    Member(Object): PrivateScope, Public, Static, HideBySig
Class NUnit.Framework.Internal.Builders.CombinatorialStrategy: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    NUnit.Framework.Interfaces.ICombiningStrategy
  Methods:
    GetTestCases(IEnumerable[]): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class NUnit.Framework.Internal.Builders.DatapointProvider: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    NUnit.Framework.Interfaces.IParameterDataProvider
  Methods:
    HasDataFor(ParameterInfo): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    GetDataFor(ParameterInfo): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class NUnit.Framework.Internal.Builders.DefaultTestCaseBuilder: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    NUnit.Framework.Interfaces.ITestCaseBuilder
  Methods:
    CanBuildFrom(MethodInfo): PrivateScope, Public, HideBySig
    BuildFrom(MethodInfo): PrivateScope, Public, HideBySig
    CanBuildFrom(MethodInfo, Test): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    BuildFrom(MethodInfo, Test): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class NUnit.Framework.Internal.Builders.NUnitTestFixtureBuilder: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    NUnit.Framework.Interfaces.IFixtureBuilder
  Methods:
    BuildFrom(Type): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    BuildFrom(Type, TestFixtureAttribute): PrivateScope, Public, HideBySig
Class NUnit.Framework.Internal.Builders.PairwiseStrategy: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    NUnit.Framework.Interfaces.ICombiningStrategy
  Methods:
    GetTestCases(IEnumerable[]): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class NUnit.Framework.Internal.Builders.ParameterDataProvider: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    NUnit.Framework.Interfaces.IParameterDataProvider
  Methods:
    HasDataFor(ParameterInfo): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    GetDataFor(ParameterInfo): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class NUnit.Framework.Internal.Builders.SequentialStrategy: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    NUnit.Framework.Interfaces.ICombiningStrategy
  Methods:
    GetTestCases(IEnumerable[]): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Struct NUnit.Framework.Internal.Commands.CommandStage: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    NUnit.Framework.Internal.Commands.CommandStage Default = 0 : Public, Static, Literal, HasDefault
    NUnit.Framework.Internal.Commands.CommandStage BelowSetUpTearDown = 1 : Public, Static, Literal, HasDefault
    NUnit.Framework.Internal.Commands.CommandStage SetUpTearDown = 2 : Public, Static, Literal, HasDefault
    NUnit.Framework.Internal.Commands.CommandStage AboveSetUpTearDown = 3 : Public, Static, Literal, HasDefault
Class NUnit.Framework.Internal.CultureDetector: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.String Reason 'get ' : 
  Methods:
    IsCultureSupported(String[]): PrivateScope, Public, HideBySig
    IsCultureSupported(CultureAttribute): PrivateScope, Public, HideBySig
    IsCultureSupported(String): PrivateScope, Public, HideBySig
    get_Reason(): PrivateScope, Public, HideBySig, SpecialName
Class NUnit.Framework.Api.DefaultTestAssemblyBuilder: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    NUnit.Framework.Api.ITestAssemblyBuilder
  Methods:
    Build(Assembly, IDictionary): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Build(String, IDictionary): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class NUnit.Framework.Internal.ExceptionHelper: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    BuildMessage(Exception): PrivateScope, Public, Static, HideBySig
    BuildStackTrace(Exception): PrivateScope, Public, Static, HideBySig
    GetStackTrace(Exception): PrivateScope, Public, Static, HideBySig
Class NUnit.Framework.Internal.Filters.AndFilter: AutoLayout, AnsiClass, Class, Public, Serializable, BeforeFieldInit
  :NUnit.Framework.Internal.TestFilter
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(NUnit.Framework.Interfaces.ITestFilter[]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    NUnit.Framework.Interfaces.ITestFilter[] Filters 'get ' : 
  Methods:
    Add(ITestFilter): PrivateScope, Public, HideBySig
    get_Filters(): PrivateScope, Public, HideBySig, SpecialName
    Pass(ITest): PrivateScope, Public, Virtual, HideBySig
    Match(ITest): PrivateScope, Public, Virtual, HideBySig
Class NUnit.Framework.Internal.Filters.CategoryFilter: AutoLayout, AnsiClass, Class, Public, Serializable, BeforeFieldInit
  :NUnit.Framework.Internal.TestFilter
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String[]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.Collections.Generic.IList`1[System.String] Categories 'get ' : 
  Methods:
    AddCategory(String): PrivateScope, Public, HideBySig
    Match(ITest): PrivateScope, Public, Virtual, HideBySig
    ToString(): PrivateScope, Public, Virtual, HideBySig
    get_Categories(): PrivateScope, Public, HideBySig, SpecialName
Class NUnit.Framework.Internal.Filters.NotFilter: AutoLayout, AnsiClass, Class, Public, Serializable, BeforeFieldInit
  :NUnit.Framework.Internal.TestFilter
    Void .ctor(NUnit.Framework.Interfaces.ITestFilter): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Boolean TopLevel 'get set' : 
    NUnit.Framework.Interfaces.ITestFilter BaseFilter 'get ' : 
  Methods:
    get_TopLevel(): PrivateScope, Public, HideBySig, SpecialName
    set_TopLevel(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_BaseFilter(): PrivateScope, Public, HideBySig, SpecialName
    Match(ITest): PrivateScope, Public, Virtual, HideBySig
Class NUnit.Framework.Internal.Filters.OrFilter: AutoLayout, AnsiClass, Class, Public, Serializable, BeforeFieldInit
  :NUnit.Framework.Internal.TestFilter
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(NUnit.Framework.Interfaces.ITestFilter[]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    NUnit.Framework.Interfaces.ITestFilter[] Filters 'get ' : 
  Methods:
    Add(ITestFilter): PrivateScope, Public, HideBySig
    get_Filters(): PrivateScope, Public, HideBySig, SpecialName
    Pass(ITest): PrivateScope, Public, Virtual, HideBySig
    Match(ITest): PrivateScope, Public, Virtual, HideBySig
Class NUnit.Framework.Internal.Filters.SimpleNameFilter: AutoLayout, AnsiClass, Class, Public, Serializable, BeforeFieldInit
  :NUnit.Framework.Internal.Filters.ValueMatchFilter`1[System.String]
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Collections.Generic.IEnumerable`1[System.String]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class NUnit.Framework.Internal.InvalidTestFixtureException: AutoLayout, AnsiClass, Class, Public, Serializable, BeforeFieldInit
  :System.Exception
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, System.Exception): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class NUnit.Framework.Internal.MethodHelper: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    GetDisplayName(MethodInfo, Object[]): PrivateScope, Public, Static, HideBySig
Class NUnit.Framework.Internal.NUnitException: AutoLayout, AnsiClass, Class, Public, Serializable, BeforeFieldInit
  :System.Exception
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, System.Exception): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class NUnit.Framework.Internal.OSPlatform: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(System.PlatformID, System.Version): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.PlatformID, System.Version, ProductType): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    System.PlatformID UnixPlatformID_Microsoft : Public, Static, InitOnly
    System.PlatformID UnixPlatformID_Mono : Public, Static, InitOnly
  Properties:
    NUnit.Framework.Internal.OSPlatform CurrentPlatform 'get ' : 
    System.PlatformID Platform 'get ' : 
    System.Version Version 'get ' : 
    ProductType Product 'get ' : 
    Boolean IsWindows 'get ' : 
    Boolean IsUnix 'get ' : 
    Boolean IsWin32S 'get ' : 
    Boolean IsWin32Windows 'get ' : 
    Boolean IsWin32NT 'get ' : 
    Boolean IsWinCE 'get ' : 
    Boolean IsXbox 'get ' : 
    Boolean IsMacOSX 'get ' : 
    Boolean IsWin95 'get ' : 
    Boolean IsWin98 'get ' : 
    Boolean IsWinME 'get ' : 
    Boolean IsNT3 'get ' : 
    Boolean IsNT4 'get ' : 
    Boolean IsNT5 'get ' : 
    Boolean IsWin2K 'get ' : 
    Boolean IsWinXP 'get ' : 
    Boolean IsWin2003Server 'get ' : 
    Boolean IsNT6 'get ' : 
    Boolean IsNT60 'get ' : 
    Boolean IsNT61 'get ' : 
    Boolean IsNT62 'get ' : 
    Boolean IsNT63 'get ' : 
    Boolean IsVista 'get ' : 
    Boolean IsWin2008Server 'get ' : 
    Boolean IsWin2008ServerR1 'get ' : 
    Boolean IsWin2008ServerR2 'get ' : 
    Boolean IsWin2012Server 'get ' : 
    Boolean IsWin2012ServerR1 'get ' : 
    Boolean IsWin2012ServerR2 'get ' : 
    Boolean IsWindows7 'get ' : 
    Boolean IsWindows8 'get ' : 
    Boolean IsWindows81 'get ' : 
  Methods:
    get_CurrentPlatform(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Platform(): PrivateScope, Public, HideBySig, SpecialName
    get_Version(): PrivateScope, Public, HideBySig, SpecialName
    get_Product(): PrivateScope, Public, HideBySig, SpecialName
    get_IsWindows(): PrivateScope, Public, HideBySig, SpecialName
    get_IsUnix(): PrivateScope, Public, HideBySig, SpecialName
    get_IsWin32S(): PrivateScope, Public, HideBySig, SpecialName
    get_IsWin32Windows(): PrivateScope, Public, HideBySig, SpecialName
    get_IsWin32NT(): PrivateScope, Public, HideBySig, SpecialName
    get_IsWinCE(): PrivateScope, Public, HideBySig, SpecialName
    get_IsXbox(): PrivateScope, Public, HideBySig, SpecialName
    get_IsMacOSX(): PrivateScope, Public, HideBySig, SpecialName
    get_IsWin95(): PrivateScope, Public, HideBySig, SpecialName
    get_IsWin98(): PrivateScope, Public, HideBySig, SpecialName
    get_IsWinME(): PrivateScope, Public, HideBySig, SpecialName
    get_IsNT3(): PrivateScope, Public, HideBySig, SpecialName
    get_IsNT4(): PrivateScope, Public, HideBySig, SpecialName
    get_IsNT5(): PrivateScope, Public, HideBySig, SpecialName
    get_IsWin2K(): PrivateScope, Public, HideBySig, SpecialName
    get_IsWinXP(): PrivateScope, Public, HideBySig, SpecialName
    get_IsWin2003Server(): PrivateScope, Public, HideBySig, SpecialName
    get_IsNT6(): PrivateScope, Public, HideBySig, SpecialName
    get_IsNT60(): PrivateScope, Public, HideBySig, SpecialName
    get_IsNT61(): PrivateScope, Public, HideBySig, SpecialName
    get_IsNT62(): PrivateScope, Public, HideBySig, SpecialName
    get_IsNT63(): PrivateScope, Public, HideBySig, SpecialName
    get_IsVista(): PrivateScope, Public, HideBySig, SpecialName
    get_IsWin2008Server(): PrivateScope, Public, HideBySig, SpecialName
    get_IsWin2008ServerR1(): PrivateScope, Public, HideBySig, SpecialName
    get_IsWin2008ServerR2(): PrivateScope, Public, HideBySig, SpecialName
    get_IsWin2012Server(): PrivateScope, Public, HideBySig, SpecialName
    get_IsWin2012ServerR1(): PrivateScope, Public, HideBySig, SpecialName
    get_IsWin2012ServerR2(): PrivateScope, Public, HideBySig, SpecialName
    get_IsWindows7(): PrivateScope, Public, HideBySig, SpecialName
    get_IsWindows8(): PrivateScope, Public, HideBySig, SpecialName
    get_IsWindows81(): PrivateScope, Public, HideBySig, SpecialName
Struct NUnit.Framework.Internal.OSPlatform+ProductType: AutoLayout, AnsiClass, Class, NestedPublic, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    ProductType Unknown = 0 : Public, Static, Literal, HasDefault
    ProductType WorkStation = 1 : Public, Static, Literal, HasDefault
    ProductType DomainController = 2 : Public, Static, Literal, HasDefault
    ProductType Server = 3 : Public, Static, Literal, HasDefault
Class NUnit.Framework.Internal.ParameterSet: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Exception): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Object[]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(NUnit.Framework.Interfaces.ITestCaseData): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    NUnit.Framework.Interfaces.ITestCaseData
    NUnit.Framework.Internal.IApplyToTest
  Properties:
    NUnit.Framework.Interfaces.RunState RunState 'get set' : 
    System.Object[] Arguments 'get set' : 
    System.Object ExpectedResult 'get set' : 
    Boolean HasExpectedResult 'get set' : 
    System.String TestName 'get set' : 
    NUnit.Framework.Interfaces.IPropertyBag Properties 'get set' : 
    System.Object[] OriginalArguments 'get set' : 
  Methods:
    get_RunState(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_RunState(RunState): PrivateScope, Public, HideBySig, SpecialName
    get_Arguments(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_ExpectedResult(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_ExpectedResult(Object): PrivateScope, Public, HideBySig, SpecialName
    get_HasExpectedResult(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_HasExpectedResult(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_TestName(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_TestName(String): PrivateScope, Public, HideBySig, SpecialName
    get_Properties(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_OriginalArguments(): PrivateScope, Public, HideBySig, SpecialName
    ApplyToTest(Test): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class NUnit.Framework.Internal.PlatformHelper: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(NUnit.Framework.Internal.OSPlatform, NUnit.Framework.Internal.RuntimeFramework): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    System.String RuntimePlatforms : Public, Static, InitOnly
    System.String OSPlatforms = Win,Win32,Win32S,Win32NT,Win32Windows,WinCE,Win95,Win98,WinMe,NT3,NT4,NT5,NT6,Win2008Server,Win2008ServerR2,Win2012Server,Win2012ServerR2,Win2K,WinXP,Win2003Server,Vista,Win7,Windows7,Win8,Windows8,Win8.1,Windows8.1,Unix,Linux,Xbox,MacOSX : Public, Static, Literal, HasDefault
  Properties:
    System.String Reason 'get ' : 
  Methods:
    IsPlatformSupported(String[]): PrivateScope, Public, HideBySig
    IsPlatformSupported(PlatformAttribute): PrivateScope, Public, HideBySig
    IsPlatformSupported(String): PrivateScope, Public, HideBySig
    get_Reason(): PrivateScope, Public, HideBySig, SpecialName
Class NUnit.Framework.Internal.PropertyBag: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    NUnit.Framework.Interfaces.IPropertyBag
    NUnit.Framework.Interfaces.IXmlNodeBuilder
  Properties:
    System.Collections.Generic.ICollection`1[System.String] Keys 'get ' : 
    System.Collections.IList Item [System.String] 'get set' : 
  Methods:
    Add(String, Object): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Set(String, Object): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Get(String): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    ContainsKey(String): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    get_Keys(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Item(String): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Item(String, IList): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    ToXml(Boolean): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    AddToXml(XmlNode, Boolean): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class NUnit.Framework.Internal.Randomizer: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :System.Random
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Int32 InitialSeed 'get set' : 
  Methods:
    get_InitialSeed(): PrivateScope, Public, Static, HideBySig, SpecialName
    set_InitialSeed(Int32): PrivateScope, Public, Static, HideBySig, SpecialName
    GetRandomizer(MemberInfo): PrivateScope, Public, Static, HideBySig
    GetRandomizer(ParameterInfo): PrivateScope, Public, Static, HideBySig
    CreateRandomizer(): PrivateScope, Public, Static, HideBySig
    GetDoubles(Int32): PrivateScope, Public, HideBySig
    GetEnums(Int32, Type): PrivateScope, Public, HideBySig
    GetDoubles(Double, Double, Int32): PrivateScope, Public, HideBySig
    GetInts(Int32, Int32, Int32): PrivateScope, Public, HideBySig
Class NUnit.Framework.Internal.Reflect: AutoLayout, AnsiClass, Class, Public, Abstract, Sealed, BeforeFieldInit
  Methods:
    GetMethodsWithAttribute(Type, Type, Boolean): PrivateScope, Public, Static, HideBySig
    HasMethodWithAttribute(Type, Type): PrivateScope, Public, Static, HideBySig
    Construct(Type): PrivateScope, Public, Static, HideBySig
    Construct(Type, Object[]): PrivateScope, Public, Static, HideBySig
    InvokeMethod(MethodInfo, Object): PrivateScope, Public, Static, HideBySig
    InvokeMethod(MethodInfo, Object, Object[]): PrivateScope, Public, Static, HideBySig
Class NUnit.Framework.Internal.TestResult: AutoLayout, AnsiClass, Class, Public, Abstract, BeforeFieldInit
    Void .ctor(NUnit.Framework.Interfaces.ITest): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    NUnit.Framework.Interfaces.ITestResult
    NUnit.Framework.Interfaces.IXmlNodeBuilder
  Fields:
    System.String CHILD_ERRORS_MESSAGE : Public, Static, InitOnly
    System.String CHILD_IGNORE_MESSAGE : Public, Static, InitOnly
  Properties:
    NUnit.Framework.Interfaces.ITest Test 'get set' : 
    NUnit.Framework.Interfaces.ResultState ResultState 'get set' : 
    System.String Name 'get ' : 
    System.String FullName 'get ' : 
    System.TimeSpan Duration 'get set' : 
    System.DateTime StartTime 'get set' : 
    System.DateTime EndTime 'get set' : 
    System.String Message 'get set' : 
    System.String EscapedMessage 'get ' : 
    System.String StackTrace 'get set' : 
    Int32 AssertCount 'get set' : 
    Int32 FailCount 'get ' : 
    Int32 PassCount 'get ' : 
    Int32 SkipCount 'get ' : 
    Int32 InconclusiveCount 'get ' : 
    Boolean HasChildren 'get ' : 
    System.Collections.Generic.IList`1[NUnit.Framework.Interfaces.ITestResult] Children 'get ' : 
    System.IO.StringWriter OutWriter 'get ' : 
    System.String Output 'get ' : 
  Methods:
    get_Test(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_ResultState(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Name(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_FullName(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Duration(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Duration(TimeSpan): PrivateScope, Public, HideBySig, SpecialName
    get_StartTime(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_StartTime(DateTime): PrivateScope, Public, HideBySig, SpecialName
    get_EndTime(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_EndTime(DateTime): PrivateScope, Public, HideBySig, SpecialName
    get_Message(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_EscapedMessage(): PrivateScope, Public, HideBySig, SpecialName
    get_StackTrace(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_AssertCount(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_AssertCount(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_FailCount(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_PassCount(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_SkipCount(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_InconclusiveCount(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_HasChildren(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Children(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_OutWriter(): PrivateScope, Public, HideBySig, SpecialName
    get_Output(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    ToXml(Boolean): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    AddToXml(XmlNode, Boolean): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    AddResult(ITestResult): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    SetResult(ResultState): PrivateScope, Public, HideBySig
    SetResult(ResultState, String): PrivateScope, Public, HideBySig
    SetResult(ResultState, String, String): PrivateScope, Public, HideBySig
    RecordException(Exception): PrivateScope, Public, HideBySig
    RecordException(Exception, FailureSite): PrivateScope, Public, HideBySig
    RecordTearDownException(Exception): PrivateScope, Public, HideBySig
Struct NUnit.Framework.Internal.RuntimeType: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    NUnit.Framework.Internal.RuntimeType Any = 0 : Public, Static, Literal, HasDefault
    NUnit.Framework.Internal.RuntimeType Net = 1 : Public, Static, Literal, HasDefault
    NUnit.Framework.Internal.RuntimeType NetCF = 2 : Public, Static, Literal, HasDefault
    NUnit.Framework.Internal.RuntimeType SSCLI = 3 : Public, Static, Literal, HasDefault
    NUnit.Framework.Internal.RuntimeType Mono = 4 : Public, Static, Literal, HasDefault
    NUnit.Framework.Internal.RuntimeType Silverlight = 5 : Public, Static, Literal, HasDefault
    NUnit.Framework.Internal.RuntimeType MonoTouch = 6 : Public, Static, Literal, HasDefault
Class NUnit.Framework.Internal.RuntimeFramework: AutoLayout, AnsiClass, Class, Public, Sealed, Serializable, BeforeFieldInit
    Void .ctor(NUnit.Framework.Internal.RuntimeType, System.Version): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    System.Version DefaultVersion : Public, Static, InitOnly
  Properties:
    NUnit.Framework.Internal.RuntimeFramework CurrentFramework 'get ' : 
    NUnit.Framework.Internal.RuntimeType Runtime 'get set' : 
    System.Version FrameworkVersion 'get set' : 
    System.Version ClrVersion 'get set' : 
    Boolean AllowAnyVersion 'get ' : 
    System.String DisplayName 'get set' : 
  Methods:
    get_CurrentFramework(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Runtime(): PrivateScope, Public, HideBySig, SpecialName
    get_FrameworkVersion(): PrivateScope, Public, HideBySig, SpecialName
    get_ClrVersion(): PrivateScope, Public, HideBySig, SpecialName
    get_AllowAnyVersion(): PrivateScope, Public, HideBySig, SpecialName
    get_DisplayName(): PrivateScope, Public, HideBySig, SpecialName
    Parse(String): PrivateScope, Public, Static, HideBySig
    ToString(): PrivateScope, Public, Virtual, HideBySig
    Supports(RuntimeFramework): PrivateScope, Public, HideBySig
Struct NUnit.Framework.Internal.TestExecutionStatus: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    NUnit.Framework.Internal.TestExecutionStatus Running = 0 : Public, Static, Literal, HasDefault
    NUnit.Framework.Internal.TestExecutionStatus StopRequested = 1 : Public, Static, Literal, HasDefault
    NUnit.Framework.Internal.TestExecutionStatus AbortRequested = 2 : Public, Static, Literal, HasDefault
Class NUnit.Framework.Internal.TestExecutionContext: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :System.MarshalByRefObject
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(NUnit.Framework.Internal.TestExecutionContext): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.Runtime.Remoting.Messaging.ILogicalThreadAffinative
  Properties:
    NUnit.Framework.Internal.TestExecutionContext CurrentContext 'get set' : 
    NUnit.Framework.Internal.Test CurrentTest 'get set' : 
    System.DateTime StartTime 'get set' : 
    Int64 StartTicks 'get set' : 
    NUnit.Framework.Internal.TestResult CurrentResult 'get set' : 
    System.Object TestObject 'get set' : 
    System.String WorkDirectory 'get set' : 
    Boolean StopOnError 'get set' : 
    NUnit.Framework.Internal.TestExecutionStatus ExecutionStatus 'get set' : 
    NUnit.Framework.ParallelScope ParallelScope 'get set' : 
    NUnit.Framework.Internal.RandomGenerator RandomGenerator 'get ' : 
    Int32 TestCaseTimeout 'get set' : 
    System.Collections.Generic.List`1[NUnit.Framework.ITestAction] UpstreamActions 'get set' : 
    System.Globalization.CultureInfo CurrentCulture 'get set' : 
    System.Globalization.CultureInfo CurrentUICulture 'get set' : 
    System.Security.Principal.IPrincipal CurrentPrincipal 'get set' : 
  Methods:
    get_CurrentContext(): PrivateScope, Public, Static, HideBySig, SpecialName
    GetTestExecutionContext(): PrivateScope, Public, Static, HideBySig
    ClearCurrentContext(): PrivateScope, Public, Static, HideBySig
    get_CurrentTest(): PrivateScope, Public, HideBySig, SpecialName
    set_CurrentTest(Test): PrivateScope, Public, HideBySig, SpecialName
    get_StartTime(): PrivateScope, Public, HideBySig, SpecialName
    set_StartTime(DateTime): PrivateScope, Public, HideBySig, SpecialName
    get_StartTicks(): PrivateScope, Public, HideBySig, SpecialName
    set_StartTicks(Int64): PrivateScope, Public, HideBySig, SpecialName
    get_CurrentResult(): PrivateScope, Public, HideBySig, SpecialName
    set_CurrentResult(TestResult): PrivateScope, Public, HideBySig, SpecialName
    get_TestObject(): PrivateScope, Public, HideBySig, SpecialName
    set_TestObject(Object): PrivateScope, Public, HideBySig, SpecialName
    get_WorkDirectory(): PrivateScope, Public, HideBySig, SpecialName
    set_WorkDirectory(String): PrivateScope, Public, HideBySig, SpecialName
    get_StopOnError(): PrivateScope, Public, HideBySig, SpecialName
    set_StopOnError(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_ExecutionStatus(): PrivateScope, Public, HideBySig, SpecialName
    set_ExecutionStatus(TestExecutionStatus): PrivateScope, Public, HideBySig, SpecialName
    get_ParallelScope(): PrivateScope, Public, HideBySig, SpecialName
    set_ParallelScope(ParallelScope): PrivateScope, Public, HideBySig, SpecialName
    get_RandomGenerator(): PrivateScope, Public, HideBySig, SpecialName
    get_TestCaseTimeout(): PrivateScope, Public, HideBySig, SpecialName
    set_TestCaseTimeout(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_UpstreamActions(): PrivateScope, Public, HideBySig, SpecialName
    get_CurrentCulture(): PrivateScope, Public, HideBySig, SpecialName
    set_CurrentCulture(CultureInfo): PrivateScope, Public, HideBySig, SpecialName
    get_CurrentUICulture(): PrivateScope, Public, HideBySig, SpecialName
    set_CurrentUICulture(CultureInfo): PrivateScope, Public, HideBySig, SpecialName
    get_CurrentPrincipal(): PrivateScope, Public, HideBySig, SpecialName
    set_CurrentPrincipal(IPrincipal): PrivateScope, Public, HideBySig, SpecialName
    UpdateContextFromEnvironment(): PrivateScope, Public, HideBySig
    EstablishExecutionEnvironment(): PrivateScope, Public, HideBySig
    IncrementAssertCount(): PrivateScope, Public, HideBySig
    IncrementAssertCount(Int32): PrivateScope, Public, HideBySig
    InitializeLifetimeService(): PrivateScope, Public, Virtual, HideBySig
Class NUnit.Framework.Internal.TestListener: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  Interfaces:
    NUnit.Framework.Interfaces.ITestListener
  Properties:
    NUnit.Framework.Interfaces.ITestListener NULL 'get ' : 
  Methods:
    TestStarted(ITest): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    TestFinished(ITestResult): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    get_NULL(): PrivateScope, Public, Static, HideBySig, SpecialName
Class NUnit.Framework.Internal.TestProgressReporter: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(System.Web.UI.ICallbackEventHandler): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    NUnit.Framework.Interfaces.ITestListener
  Methods:
    TestStarted(ITest): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    TestFinished(ITestResult): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class NUnit.Framework.Internal.Test: AutoLayout, AnsiClass, Class, Public, Abstract, BeforeFieldInit
  Interfaces:
    NUnit.Framework.Interfaces.ITest
    NUnit.Framework.Interfaces.IXmlNodeBuilder
    System.IComparable
  Properties:
    Int32 Id   'get set' : 
    System.String Name 'get set' : 
    System.String FullName 'get set' : 
    System.Type FixtureType 'get set' : 
    System.Reflection.MethodInfo Method 'get set' : 
    NUnit.Framework.Interfaces.RunState RunState 'get set' : 
    System.String XmlElementName 'get ' : 
    System.String TestType 'get ' : 
    Int32 TestCaseCount 'get ' : 
    NUnit.Framework.Interfaces.IPropertyBag Properties 'get set' : 
    Boolean IsSuite 'get ' : 
    Boolean HasChildren 'get ' : 
    NUnit.Framework.Interfaces.ITest Parent 'get set' : 
    System.Collections.Generic.IList`1[NUnit.Framework.Interfaces.ITest] Tests 'get ' : 
    System.Object Fixture 'get set' : 
    Int32 Seed 'get set' : 
  Methods:
    get_Id(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Id(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_Name(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Name(String): PrivateScope, Public, HideBySig, SpecialName
    get_FullName(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_FullName(String): PrivateScope, Public, HideBySig, SpecialName
    get_FixtureType(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Method(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Method(MethodInfo): PrivateScope, Public, HideBySig, SpecialName
    get_RunState(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_RunState(RunState): PrivateScope, Public, HideBySig, SpecialName
    get_XmlElementName(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_TestType(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_TestCaseCount(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Properties(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_IsSuite(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_HasChildren(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_Parent(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Parent(ITest): PrivateScope, Public, HideBySig, SpecialName
    get_Tests(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_Fixture(): PrivateScope, Public, HideBySig, SpecialName
    set_Fixture(Object): PrivateScope, Public, HideBySig, SpecialName
    get_Seed(): PrivateScope, Public, HideBySig, SpecialName
    set_Seed(Int32): PrivateScope, Public, HideBySig, SpecialName
    MakeTestResult(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    ApplyAttributesToTest(ICustomAttributeProvider): PrivateScope, Public, HideBySig
    ToXml(Boolean): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    AddToXml(XmlNode, Boolean): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    CompareTo(Object): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class NUnit.Framework.Internal.TestSuite: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :NUnit.Framework.Internal.Test
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Type): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.Collections.Generic.IList`1[NUnit.Framework.Interfaces.ITest] Tests 'get ' : 
    Int32 TestCaseCount 'get ' : 
    System.Object[] Arguments 'get set' : 
    Boolean HasChildren 'get ' : 
    System.String XmlElementName 'get ' : 
  Methods:
    Sort(): PrivateScope, Public, HideBySig
    Add(Test): PrivateScope, Public, HideBySig
    get_Tests(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_TestCaseCount(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Arguments(): PrivateScope, Public, HideBySig, SpecialName
    MakeTestResult(): PrivateScope, Public, Virtual, HideBySig
    get_HasChildren(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_XmlElementName(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    AddToXml(XmlNode, Boolean): PrivateScope, Public, Virtual, HideBySig
Class NUnit.Framework.Internal.ParameterizedFixtureSuite: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :NUnit.Framework.Internal.TestSuite
    Void .ctor(System.Type): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.Type ParameterizedType 'get ' : 
    System.String TestType 'get ' : 
  Methods:
    get_ParameterizedType(): PrivateScope, Public, HideBySig, SpecialName
    get_TestType(): PrivateScope, Public, Virtual, HideBySig, SpecialName
Class NUnit.Framework.Internal.ParameterizedMethodSuite: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :NUnit.Framework.Internal.TestSuite
    Void .ctor(System.Reflection.MethodInfo): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.String TestType 'get ' : 
  Methods:
    get_TestType(): PrivateScope, Public, Virtual, HideBySig, SpecialName
Class NUnit.Framework.Internal.SetUpFixture: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :NUnit.Framework.Internal.TestSuite
    Void .ctor(System.Type): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class NUnit.Framework.Internal.TestAssembly: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :NUnit.Framework.Internal.TestSuite
    Void .ctor(System.Reflection.Assembly, System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.Reflection.Assembly Assembly 'get set' : 
    System.String TestType 'get ' : 
  Methods:
    get_Assembly(): PrivateScope, Public, HideBySig, SpecialName
    get_TestType(): PrivateScope, Public, Virtual, HideBySig, SpecialName
Class NUnit.Framework.Internal.TestFixture: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :NUnit.Framework.Internal.TestSuite
    Void .ctor(System.Type): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class NUnit.Framework.Internal.TestMethod: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :NUnit.Framework.Internal.Test
    Void .ctor(System.Reflection.MethodInfo): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Reflection.MethodInfo, NUnit.Framework.Internal.Test): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Boolean HasChildren 'get ' : 
    System.Collections.Generic.IList`1[NUnit.Framework.Interfaces.ITest] Tests 'get ' : 
    System.String XmlElementName 'get ' : 
  Methods:
    MakeTestResult(): PrivateScope, Public, Virtual, HideBySig
    get_HasChildren(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    AddToXml(XmlNode, Boolean): PrivateScope, Public, Virtual, HideBySig
    get_Tests(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_XmlElementName(): PrivateScope, Public, Virtual, HideBySig, SpecialName
Class NUnit.Framework.Internal.ThreadUtility: AutoLayout, AnsiClass, Class, Public, Abstract, Sealed, BeforeFieldInit
  Methods:
    Kill(Thread): PrivateScope, Public, Static, HideBySig
    Kill(Thread, Object): PrivateScope, Public, Static, HideBySig
Class NUnit.Framework.Internal.TypeHelper: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    GetDisplayName(Type): PrivateScope, Public, Static, HideBySig
    GetDisplayName(Type, Object[]): PrivateScope, Public, Static, HideBySig
    BestCommonType(Type, Type): PrivateScope, Public, Static, HideBySig
    IsNumeric(Type): PrivateScope, Public, Static, HideBySig
    ConvertArgumentList(Object[], ParameterInfo[]): PrivateScope, Public, Static, HideBySig
    MakeGenericType(Type, Type[]): PrivateScope, Public, Static, HideBySig
    CanDeduceTypeArgsFromArgs(Type, Object[], Type[]&): PrivateScope, Public, Static, HideBySig
    GetEnumValues(Type): PrivateScope, Public, Static, HideBySig
    GetEnumNames(Type): PrivateScope, Public, Static, HideBySig
Class NUnit.Framework.Is: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    NUnit.Framework.Constraints.ConstraintExpression Not 'get ' : 
    NUnit.Framework.Constraints.ConstraintExpression All 'get ' : 
    NUnit.Framework.Constraints.NullConstraint Null 'get ' : 
    NUnit.Framework.Constraints.TrueConstraint True 'get ' : 
    NUnit.Framework.Constraints.FalseConstraint False 'get ' : 
    NUnit.Framework.Constraints.GreaterThanConstraint Positive 'get ' : 
    NUnit.Framework.Constraints.LessThanConstraint Negative 'get ' : 
    NUnit.Framework.Constraints.NaNConstraint NaN 'get ' : 
    NUnit.Framework.Constraints.EmptyConstraint Empty 'get ' : 
    NUnit.Framework.Constraints.UniqueItemsConstraint Unique 'get ' : 
    NUnit.Framework.Constraints.BinarySerializableConstraint BinarySerializable 'get ' : 
    NUnit.Framework.Constraints.XmlSerializableConstraint XmlSerializable 'get ' : 
    NUnit.Framework.Constraints.CollectionOrderedConstraint Ordered 'get ' : 
  Methods:
    get_Not(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_All(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Null(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_True(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_False(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Positive(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Negative(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_NaN(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Empty(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Unique(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_BinarySerializable(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_XmlSerializable(): PrivateScope, Public, Static, HideBySig, SpecialName
    EqualTo(Object): PrivateScope, Public, Static, HideBySig
    SameAs(Object): PrivateScope, Public, Static, HideBySig
    GreaterThan(Object): PrivateScope, Public, Static, HideBySig
    GreaterThanOrEqualTo(Object): PrivateScope, Public, Static, HideBySig
    AtLeast(Object): PrivateScope, Public, Static, HideBySig
    LessThan(Object): PrivateScope, Public, Static, HideBySig
    LessThanOrEqualTo(Object): PrivateScope, Public, Static, HideBySig
    AtMost(Object): PrivateScope, Public, Static, HideBySig
    TypeOf(Type): PrivateScope, Public, Static, HideBySig
    TypeOf(): PrivateScope, Public, Static, HideBySig
    InstanceOf(Type): PrivateScope, Public, Static, HideBySig
    InstanceOf(): PrivateScope, Public, Static, HideBySig
    AssignableFrom(Type): PrivateScope, Public, Static, HideBySig
    AssignableFrom(): PrivateScope, Public, Static, HideBySig
    AssignableTo(Type): PrivateScope, Public, Static, HideBySig
    AssignableTo(): PrivateScope, Public, Static, HideBySig
    EquivalentTo(IEnumerable): PrivateScope, Public, Static, HideBySig
    SubsetOf(IEnumerable): PrivateScope, Public, Static, HideBySig
    get_Ordered(): PrivateScope, Public, Static, HideBySig, SpecialName
    StringContaining(String): PrivateScope, Public, Static, HideBySig (Obsolete)
    StringStarting(String): PrivateScope, Public, Static, HideBySig (Obsolete)
    StringEnding(String): PrivateScope, Public, Static, HideBySig (Obsolete)
    StringMatching(String): PrivateScope, Public, Static, HideBySig (Obsolete)
    SamePath(String): PrivateScope, Public, Static, HideBySig
    SubPathOf(String): PrivateScope, Public, Static, HideBySig
    SamePathOrUnder(String): PrivateScope, Public, Static, HideBySig
    InRange(IComparable, IComparable): PrivateScope, Public, Static, HideBySig
Class NUnit.Framework.Iz: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :NUnit.Framework.Is
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class NUnit.Framework.List: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Map(ICollection): PrivateScope, Public, Static, HideBySig
Class NUnit.Framework.ListMapper: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(System.Collections.ICollection): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Property(String): PrivateScope, Public, HideBySig
Struct NUnit.Framework.SpecialValue: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    NUnit.Framework.SpecialValue Null = 0 : Public, Static, Literal, HasDefault
Class NUnit.Framework.StringAssert: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Equals(Object, Object): PrivateScope, Public, Static, HideBySig
    ReferenceEquals(Object, Object): PrivateScope, Public, Static, HideBySig
    Contains(String, String, String, Object[]): PrivateScope, Public, Static, HideBySig
    Contains(String, String, String): PrivateScope, Public, Static, HideBySig
    Contains(String, String): PrivateScope, Public, Static, HideBySig
    DoesNotContain(String, String, String, Object[]): PrivateScope, Public, Static, HideBySig
    DoesNotContain(String, String, String): PrivateScope, Public, Static, HideBySig
    DoesNotContain(String, String): PrivateScope, Public, Static, HideBySig
    StartsWith(String, String, String, Object[]): PrivateScope, Public, Static, HideBySig
    StartsWith(String, String, String): PrivateScope, Public, Static, HideBySig
    StartsWith(String, String): PrivateScope, Public, Static, HideBySig
    DoesNotStartWith(String, String, String, Object[]): PrivateScope, Public, Static, HideBySig
    DoesNotStartWith(String, String, String): PrivateScope, Public, Static, HideBySig
    DoesNotStartWith(String, String): PrivateScope, Public, Static, HideBySig
    EndsWith(String, String, String, Object[]): PrivateScope, Public, Static, HideBySig
    EndsWith(String, String, String): PrivateScope, Public, Static, HideBySig
    EndsWith(String, String): PrivateScope, Public, Static, HideBySig
    DoesNotEndWith(String, String, String, Object[]): PrivateScope, Public, Static, HideBySig
    DoesNotEndWith(String, String, String): PrivateScope, Public, Static, HideBySig
    DoesNotEndWith(String, String): PrivateScope, Public, Static, HideBySig
    AreEqualIgnoringCase(String, String, String, Object[]): PrivateScope, Public, Static, HideBySig
    AreEqualIgnoringCase(String, String, String): PrivateScope, Public, Static, HideBySig
    AreEqualIgnoringCase(String, String): PrivateScope, Public, Static, HideBySig
    AreNotEqualIgnoringCase(String, String, String, Object[]): PrivateScope, Public, Static, HideBySig
    AreNotEqualIgnoringCase(String, String, String): PrivateScope, Public, Static, HideBySig
    AreNotEqualIgnoringCase(String, String): PrivateScope, Public, Static, HideBySig
    IsMatch(String, String, String, Object[]): PrivateScope, Public, Static, HideBySig
    IsMatch(String, String, String): PrivateScope, Public, Static, HideBySig
    IsMatch(String, String): PrivateScope, Public, Static, HideBySig
    DoesNotMatch(String, String, String, Object[]): PrivateScope, Public, Static, HideBySig
    DoesNotMatch(String, String, String): PrivateScope, Public, Static, HideBySig
    DoesNotMatch(String, String): PrivateScope, Public, Static, HideBySig
Class NUnit.Framework.TestCaseData: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :NUnit.Framework.Internal.ParameterSet
    Void .ctor(System.Object[]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Object): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Object, System.Object): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Object, System.Object, System.Object): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Returns(Object): PrivateScope, Public, HideBySig
    SetName(String): PrivateScope, Public, HideBySig
    SetDescription(String): PrivateScope, Public, HideBySig
    SetCategory(String): PrivateScope, Public, HideBySig
    SetProperty(String, String): PrivateScope, Public, HideBySig
    SetProperty(String, Int32): PrivateScope, Public, HideBySig
    SetProperty(String, Double): PrivateScope, Public, HideBySig
    Ignore(): PrivateScope, Public, HideBySig
    Explicit(): PrivateScope, Public, HideBySig
    Explicit(String): PrivateScope, Public, HideBySig
    Ignore(String): PrivateScope, Public, HideBySig
Class NUnit.Framework.TestContext: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(NUnit.Framework.Internal.TestExecutionContext): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    NUnit.Framework.TestContext CurrentContext 'get ' : 
    System.IO.TextWriter Out 'get ' : 
    TestAdapter Test 'get ' : 
    ResultAdapter Result 'get ' : 
    System.String TestDirectory 'get ' : 
    System.String WorkDirectory 'get ' : 
    NUnit.Framework.Internal.RandomGenerator Random 'get ' : 
  Methods:
    get_CurrentContext(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Out(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Test(): PrivateScope, Public, HideBySig, SpecialName
    get_Result(): PrivateScope, Public, HideBySig, SpecialName
    get_TestDirectory(): PrivateScope, Public, HideBySig, SpecialName
    get_WorkDirectory(): PrivateScope, Public, HideBySig, SpecialName
    get_Random(): PrivateScope, Public, HideBySig, SpecialName
    Write(Boolean): PrivateScope, Public, Static, HideBySig
    Write(Char): PrivateScope, Public, Static, HideBySig
    Write(Char[]): PrivateScope, Public, Static, HideBySig
    Write(Double): PrivateScope, Public, Static, HideBySig
    Write(Int32): PrivateScope, Public, Static, HideBySig
    Write(Int64): PrivateScope, Public, Static, HideBySig
    Write(Decimal): PrivateScope, Public, Static, HideBySig
    Write(Object): PrivateScope, Public, Static, HideBySig
    Write(Single): PrivateScope, Public, Static, HideBySig
    Write(String): PrivateScope, Public, Static, HideBySig
    Write(UInt32): PrivateScope, Public, Static, HideBySig
    Write(UInt64): PrivateScope, Public, Static, HideBySig
    Write(String, Object): PrivateScope, Public, Static, HideBySig
    Write(String, Object, Object): PrivateScope, Public, Static, HideBySig
    Write(String, Object, Object, Object): PrivateScope, Public, Static, HideBySig
    Write(String, Object[]): PrivateScope, Public, Static, HideBySig
    WriteLine(): PrivateScope, Public, Static, HideBySig
    WriteLine(Boolean): PrivateScope, Public, Static, HideBySig
    WriteLine(Char): PrivateScope, Public, Static, HideBySig
    WriteLine(Char[]): PrivateScope, Public, Static, HideBySig
    WriteLine(Double): PrivateScope, Public, Static, HideBySig
    WriteLine(Int32): PrivateScope, Public, Static, HideBySig
    WriteLine(Int64): PrivateScope, Public, Static, HideBySig
    WriteLine(Decimal): PrivateScope, Public, Static, HideBySig
    WriteLine(Object): PrivateScope, Public, Static, HideBySig
    WriteLine(Single): PrivateScope, Public, Static, HideBySig
    WriteLine(String): PrivateScope, Public, Static, HideBySig
    WriteLine(UInt32): PrivateScope, Public, Static, HideBySig
    WriteLine(UInt64): PrivateScope, Public, Static, HideBySig
    WriteLine(String, Object): PrivateScope, Public, Static, HideBySig
    WriteLine(String, Object, Object): PrivateScope, Public, Static, HideBySig
    WriteLine(String, Object, Object, Object): PrivateScope, Public, Static, HideBySig
    WriteLine(String, Object[]): PrivateScope, Public, Static, HideBySig
Class NUnit.Framework.TestContext+TestAdapter: AutoLayout, AnsiClass, Class, NestedPublic, BeforeFieldInit
    Void .ctor(NUnit.Framework.Internal.Test): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Int32 ID   'get ' : 
    System.String Name 'get ' : 
    System.String MethodName 'get ' : 
    System.String FullName 'get ' : 
    NUnit.Framework.Interfaces.IPropertyBag Properties 'get ' : 
  Methods:
    get_ID(): PrivateScope, Public, HideBySig, SpecialName
    get_Name(): PrivateScope, Public, HideBySig, SpecialName
    get_MethodName(): PrivateScope, Public, HideBySig, SpecialName
    get_FullName(): PrivateScope, Public, HideBySig, SpecialName
    get_Properties(): PrivateScope, Public, HideBySig, SpecialName
Class NUnit.Framework.TestContext+ResultAdapter: AutoLayout, AnsiClass, Class, NestedPublic, BeforeFieldInit
    Void .ctor(NUnit.Framework.Internal.TestResult): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    NUnit.Framework.Interfaces.ResultState Outcome 'get ' : 
    System.String Message 'get ' : 
    System.String StackTrace 'get ' : 
    Int32 FailCount 'get ' : 
    Int32 PassCount 'get ' : 
    Int32 SkipCount 'get ' : 
    Int32 InconclusiveCount 'get ' : 
  Methods:
    get_Outcome(): PrivateScope, Public, HideBySig, SpecialName
    get_Message(): PrivateScope, Public, HideBySig, SpecialName
    get_StackTrace(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_FailCount(): PrivateScope, Public, HideBySig, SpecialName
    get_PassCount(): PrivateScope, Public, HideBySig, SpecialName
    get_SkipCount(): PrivateScope, Public, HideBySig, SpecialName
    get_InconclusiveCount(): PrivateScope, Public, HideBySig, SpecialName
Class NUnit.Framework.Throws: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    NUnit.Framework.Constraints.ResolvableConstraintExpression Exception 'get ' : 
    NUnit.Framework.Constraints.ResolvableConstraintExpression InnerException 'get ' : 
    NUnit.Framework.Constraints.ExactTypeConstraint TargetInvocationException 'get ' : 
    NUnit.Framework.Constraints.ExactTypeConstraint ArgumentException 'get ' : 
    NUnit.Framework.Constraints.ExactTypeConstraint InvalidOperationException 'get ' : 
    NUnit.Framework.Constraints.ThrowsNothingConstraint Nothing 'get ' : 
  Methods:
    get_Exception(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_InnerException(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_TargetInvocationException(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_ArgumentException(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_InvalidOperationException(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Nothing(): PrivateScope, Public, Static, HideBySig, SpecialName
    TypeOf(Type): PrivateScope, Public, Static, HideBySig
    TypeOf(): PrivateScope, Public, Static, HideBySig
    InstanceOf(Type): PrivateScope, Public, Static, HideBySig
    InstanceOf(): PrivateScope, Public, Static, HideBySig
Class NUnit.Framework.Internal.TestCaseResult: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :NUnit.Framework.Internal.TestResult
    Void .ctor(NUnit.Framework.Internal.TestMethod): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Int32 FailCount 'get ' : 
    Int32 PassCount 'get ' : 
    Int32 SkipCount 'get ' : 
    Int32 InconclusiveCount 'get ' : 
  Methods:
    get_FailCount(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_PassCount(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_SkipCount(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_InconclusiveCount(): PrivateScope, Public, Virtual, HideBySig, SpecialName
Class NUnit.Framework.Internal.TestSuiteResult: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :NUnit.Framework.Internal.TestResult
    Void .ctor(NUnit.Framework.Internal.TestSuite): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Int32 FailCount 'get ' : 
    Int32 PassCount 'get ' : 
    Int32 SkipCount 'get ' : 
    Int32 InconclusiveCount 'get ' : 
  Methods:
    get_FailCount(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_PassCount(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_SkipCount(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_InconclusiveCount(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    AddResult(ITestResult): PrivateScope, Public, Virtual, HideBySig
Class NUnit.Framework.Constraints.ExactCountConstraint: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :NUnit.Framework.Constraints.PrefixConstraint
    Void .ctor(Int32, NUnit.Framework.Constraints.IConstraint): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    ApplyTo(TActual): PrivateScope, Public, Virtual, HideBySig
Class NUnit.Framework.Constraints.ExactCountOperator: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :NUnit.Framework.Constraints.CollectionOperator
    Void .ctor(Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    ApplyPrefix(IConstraint): PrivateScope, Public, Virtual, HideBySig
Class NUnit.Framework.Constraints.ExceptionTypeConstraint: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :NUnit.Framework.Constraints.ExactTypeConstraint
    Void .ctor(System.Type): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
